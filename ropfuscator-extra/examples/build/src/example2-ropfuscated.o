; ModuleID = '/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example2.c'
source_filename = "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$__llvm_profile_filename = comdat any

@.str = private unnamed_addr constant [30 x i8] c"Enter two positive integers: \00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"The LCM of %d and %d is %d.\00", align 1
@__llvm_coverage_mapping = internal constant { { i32, i32, i32, i32 }, [1 x <{ i64, i32, i64 }>], [184 x i8] } { { i32, i32, i32, i32 } { i32 1, i32 78, i32 106, i32 2 }, [1 x <{ i64, i32, i64 }>] [<{ i64, i32, i64 }> <{ i64 -2624081020897602054, i32 100, i64 -711077131543345119 }>], [184 x i8] c"\01L/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example2.c\01\00\05\01\05\0B\0D\01\09\09\0D\09\0D\0E\01\03\0C\11\02\05\06\1B\00\9D\80\80\80\08\05\00\1D\00\1F\02\00\22\00$\06\03\0A\00\0B\09\00\0C\00\8D\80\80\80\08\09\00\0D\06\04\09\01\09\00\1E\09\00\09\007\11\00\22\007\0D\008\00\B9\80\80\80\08\0D\009\03\06\12\03\06\01\85\80\80\80\08\12\01\05\01\04\00\00\00\00\00\00" }, section "__llvm_covmap", align 8
@__profc_main = private global [5 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_main = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -2624081020897602054, i64 -711077131543345119, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i32 0, i32 0), i8* bitcast (i32 ()* @main to i8*), i8* null, i32 5, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__llvm_prf_nm = private constant [14 x i8] c"\04\0Cx\DA\CBM\CC\CC\03\00\04\1B\01\A6", section "__llvm_prf_names"
@llvm.used = appending global [3 x i8*] [i8* bitcast ({ { i32, i32, i32, i32 }, [1 x <{ i64, i32, i64 }>], [184 x i8] }* @__llvm_coverage_mapping to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_main to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__llvm_prf_nm, i32 0, i32 0)], section "llvm.metadata"
@__llvm_profile_filename = constant [30 x i8] c"example2-ropfuscated.profdata\00", comdat

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !7 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %5 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 0), !dbg !11
  %6 = add i64 %5, 1, !dbg !11
  store i64 %6, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 0), !dbg !11
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12, metadata !DIExpression()), !dbg !13
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14, metadata !DIExpression()), !dbg !15
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16, metadata !DIExpression()), !dbg !17
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0)), !dbg !18
  %8 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i32* %2, i32* %3), !dbg !19
  %9 = load i32, i32* %2, align 4, !dbg !20
  %10 = load i32, i32* %3, align 4, !dbg !21
  %11 = icmp sgt i32 %9, %10, !dbg !22
  br i1 %11, label %12, label %16, !dbg !23

; <label>:12:                                     ; preds = %0
  %13 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 1), !dbg !23
  %14 = add i64 %13, 1, !dbg !23
  store i64 %14, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 1), !dbg !23
  %15 = load i32, i32* %2, align 4, !dbg !24
  br label %18, !dbg !23

; <label>:16:                                     ; preds = %0
  %17 = load i32, i32* %3, align 4, !dbg !25
  br label %18, !dbg !23

; <label>:18:                                     ; preds = %16, %12
  %19 = phi i32 [ %15, %12 ], [ %17, %16 ], !dbg !23
  store i32 %19, i32* %4, align 4, !dbg !26
  br label %20, !dbg !27

; <label>:20:                                     ; preds = %18, %41
  %21 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 2), !dbg !27
  %22 = add i64 %21, 1, !dbg !27
  store i64 %22, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 2), !dbg !27
  %23 = load i32, i32* %4, align 4, !dbg !28
  %24 = load i32, i32* %2, align 4, !dbg !31
  %25 = srem i32 %23, %24, !dbg !32
  %26 = icmp eq i32 %25, 0, !dbg !33
  br i1 %26, label %27, label %41, !dbg !34

; <label>:27:                                     ; preds = %20
  %28 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 4), !dbg !35
  %29 = add i64 %28, 1, !dbg !35
  store i64 %29, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 4), !dbg !35
  %30 = load i32, i32* %4, align 4, !dbg !36
  %31 = load i32, i32* %3, align 4, !dbg !37
  %32 = srem i32 %30, %31, !dbg !38
  %33 = icmp eq i32 %32, 0, !dbg !39
  br i1 %33, label %34, label %41, !dbg !35

; <label>:34:                                     ; preds = %27
  %35 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 3), !dbg !35
  %36 = add i64 %35, 1, !dbg !35
  store i64 %36, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_main, i64 0, i64 3), !dbg !35
  %37 = load i32, i32* %2, align 4, !dbg !40
  %38 = load i32, i32* %3, align 4, !dbg !42
  %39 = load i32, i32* %4, align 4, !dbg !43
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0), i32 %37, i32 %38, i32 %39), !dbg !44
  br label %44, !dbg !45

; <label>:41:                                     ; preds = %27, %20
  %42 = load i32, i32* %4, align 4, !dbg !46
  %43 = add nsw i32 %42, 1, !dbg !46
  store i32 %43, i32* %4, align 4, !dbg !46
  br label %20, !dbg !27, !llvm.loop !47

; <label>:44:                                     ; preds = %34
  ret i32 0, !dbg !49
}

; Function Attrs: nounwind
declare void @llvm.instrprof.increment(i8*, i64, i32, i32) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @__isoc99_scanf(i8*, ...) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example2.c", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!7 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 3, type: !8, isLocal: false, isDefinition: true, scopeLine: 3, isOptimized: false, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{!10}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DILocation(line: 3, column: 12, scope: !7)
!12 = !DILocalVariable(name: "n1", scope: !7, file: !1, line: 4, type: !10)
!13 = !DILocation(line: 4, column: 7, scope: !7)
!14 = !DILocalVariable(name: "n2", scope: !7, file: !1, line: 4, type: !10)
!15 = !DILocation(line: 4, column: 11, scope: !7)
!16 = !DILocalVariable(name: "minMultiple", scope: !7, file: !1, line: 4, type: !10)
!17 = !DILocation(line: 4, column: 15, scope: !7)
!18 = !DILocation(line: 5, column: 3, scope: !7)
!19 = !DILocation(line: 6, column: 3, scope: !7)
!20 = !DILocation(line: 9, column: 18, scope: !7)
!21 = !DILocation(line: 9, column: 23, scope: !7)
!22 = !DILocation(line: 9, column: 21, scope: !7)
!23 = !DILocation(line: 9, column: 17, scope: !7)
!24 = !DILocation(line: 9, column: 29, scope: !7)
!25 = !DILocation(line: 9, column: 34, scope: !7)
!26 = !DILocation(line: 9, column: 15, scope: !7)
!27 = !DILocation(line: 12, column: 3, scope: !7)
!28 = !DILocation(line: 13, column: 9, scope: !29)
!29 = distinct !DILexicalBlock(scope: !30, file: !1, line: 13, column: 9)
!30 = distinct !DILexicalBlock(scope: !7, file: !1, line: 12, column: 13)
!31 = !DILocation(line: 13, column: 23, scope: !29)
!32 = !DILocation(line: 13, column: 21, scope: !29)
!33 = !DILocation(line: 13, column: 26, scope: !29)
!34 = !DILocation(line: 13, column: 31, scope: !29)
!35 = !DILocation(line: 13, column: 9, scope: !30)
!36 = !DILocation(line: 13, column: 34, scope: !29)
!37 = !DILocation(line: 13, column: 48, scope: !29)
!38 = !DILocation(line: 13, column: 46, scope: !29)
!39 = !DILocation(line: 13, column: 51, scope: !29)
!40 = !DILocation(line: 14, column: 45, scope: !41)
!41 = distinct !DILexicalBlock(scope: !29, file: !1, line: 13, column: 57)
!42 = !DILocation(line: 14, column: 49, scope: !41)
!43 = !DILocation(line: 14, column: 53, scope: !41)
!44 = !DILocation(line: 14, column: 7, scope: !41)
!45 = !DILocation(line: 15, column: 7, scope: !41)
!46 = !DILocation(line: 17, column: 5, scope: !30)
!47 = distinct !{!47, !27, !48}
!48 = !DILocation(line: 18, column: 3, scope: !7)
!49 = !DILocation(line: 19, column: 3, scope: !7)
