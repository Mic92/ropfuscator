; ModuleID = '/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example6.c'
source_filename = "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example6.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.emprec = type { i32, i8* }

$__llvm_profile_filename = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Enter the choice\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"1-Insert a new record into file\0A2-Display the records\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"3-Update the record\0A4-Exit\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Enter the correct choice\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"a+\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Enter the employee id\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Enter the employee name\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c" %[^\0A]s\00", align 1
@count = common dso_local global i32 0, align 4, !dbg !0
@.str.10 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"no records to display\0A\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"r+\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"enter which employee id to be updated\0A\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"enter employee name for update:\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"update of the record succesfully\0A\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"update unsuccesful enter correct id\0A\00", align 1
@__llvm_coverage_mapping = internal constant { { i32, i32, i32, i32 }, [4 x <{ i64, i32, i64 }>], [424 x i8] } { { i32, i32, i32, i32 } { i32 4, i32 78, i32 346, i32 2 }, [4 x <{ i64, i32, i64 }>] [<{ i64, i32, i64 }> <{ i64 -2624081020897602054, i32 55, i64 -6152745038460495821 }>, <{ i64, i32, i64 }> <{ i64 -5886161843874963488, i32 35, i64 175973585 }>, <{ i64, i32, i64 }> <{ i64 5619966915797317611, i32 97, i64 5113300303230663494 }>, <{ i64, i32, i64 }> <{ i64 1567579429343904570, i32 157, i64 1047914995824842979 }>], [424 x i8] c"\01L/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example6.c\01\00\01\01\09\09\01\15#\18\02\03\03\0A\00\0B\05\00\0C\00\8D\80\80\80\08\05\00\0D\14\04\0D\06\05\02\0C\11\03\05\02\0C\15\03\05\02\0C\19\03\05\01\0E\1D\02\05\01+\01\00\01\01\05\05\010\16\15\02\01\07\07\00\12\05\01\05\00\0F\02\00\10\01\88\80\80\80\08\02\01\08\08\04\01\00\06\01\05\02\09\02\09\12\09\17\05\01\0D\0D\01H\17\1B\02\01\08\07\00\11\05\00\12\00\93\80\80\80\08\05\00\13\03\04\02\03\04\01\83\80\80\80\08\02\01\03\0F\02\02\00\07\00\12\09\01\05\00\0F\0A\00\10\01\88\80\80\80\08\0A\01\08\09\04\0E\01\0C\00\0F\0D\00\10\01\85\80\80\80\08\0D\01\05\06\06\01\00\0A\01\05\0B\05\01\09\12\11\17\05\01\0D\0D\11\0D\11\02\15\02\15\15\01f\16,\02\01\08\07\00\12\05\01\05\00\0F\02\00\10\01\88\80\80\80\08\02\01\08!\04\06\01\0C\00\0F\09\00\10\02\85\80\80\80\08\09\02\05\06\06\0E\0B\0C\00\0F\0D\00\10\01\85\80\80\80\08\0D\01\05\0A\06\0D\02\0B\00\1C\11\00\1D\00\9E\80\80\80\08\11\00\1E\05\08\1E\05\08\01\87\80\80\80\08\1E\01\07\02\06\02\03\09\00\0F\15\00\10\01\87\80\80\80\08\15\01\07\003&\004\02\87\80\80\80\08&\02\07\006\00\00" }, section "__llvm_covmap", align 8
@__profc_main = private global [8 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_main = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -2624081020897602054, i64 -6152745038460495821, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i32 0, i32 0), i8* bitcast (void (i32, i8**)* @main to i8*), i8* null, i32 8, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_insert = private global [2 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_insert = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -5886161843874963488, i64 175973585, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @__profc_insert, i32 0, i32 0), i8* bitcast (void (i8*)* @insert to i8*), i8* null, i32 2, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_display = private global [4 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_display = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 5619966915797317611, i64 5113300303230663494, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i32 0, i32 0), i8* bitcast (void (i8*)* @display to i8*), i8* null, i32 4, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_update = private global [6 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_update = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 1567579429343904570, i64 1047914995824842979, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i32 0, i32 0), i8* bitcast (void (i8*)* @update to i8*), i8* null, i32 6, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__llvm_prf_nm = private constant [36 x i8] c"\1A\22x\DA\CBM\CC\CCc\CC\CC+N-*aL\C9,.\C8I\ACd,-HI,I\05\00\81\8D\09\B7", section "__llvm_prf_names"
@llvm.used = appending global [6 x i8*] [i8* bitcast ({ { i32, i32, i32, i32 }, [4 x <{ i64, i32, i64 }>], [424 x i8] }* @__llvm_coverage_mapping to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_main to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_insert to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_display to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_update to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__llvm_prf_nm, i32 0, i32 0)], section "llvm.metadata"
@__llvm_profile_filename = constant [30 x i8] c"example6-ropfuscated.profdata\00", comdat

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32, i8**) #0 !dbg !21 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !25, metadata !DIExpression()), !dbg !26
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !27, metadata !DIExpression()), !dbg !28
  %6 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 0), !dbg !29
  %7 = add i64 %6, 1, !dbg !29
  store i64 %7, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 0), !dbg !29
  call void @llvm.dbg.declare(metadata i32* %5, metadata !30, metadata !DIExpression()), !dbg !31
  br label %8, !dbg !32

; <label>:8:                                      ; preds = %2, %41
  %9 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 1), !dbg !32
  %10 = add i64 %9, 1, !dbg !32
  store i64 %10, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 1), !dbg !32
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0)), !dbg !33
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i32 0, i32 0)), !dbg !35
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0)), !dbg !36
  %14 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32* %5), !dbg !37
  %15 = load i32, i32* %5, align 4, !dbg !38
  switch i32 %15, label %37 [
    i32 1, label %16
    i32 2, label %22
    i32 3, label %28
    i32 4, label %34
  ], !dbg !39

; <label>:16:                                     ; preds = %8
  %17 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 3), !dbg !40
  %18 = add i64 %17, 1, !dbg !40
  store i64 %18, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 3), !dbg !40
  %19 = load i8**, i8*** %4, align 8, !dbg !41
  %20 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !41
  %21 = load i8*, i8** %20, align 8, !dbg !41
  call void @insert(i8* %21), !dbg !43
  br label %41, !dbg !44

; <label>:22:                                     ; preds = %8
  %23 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 4), !dbg !44
  %24 = add i64 %23, 1, !dbg !44
  store i64 %24, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 4), !dbg !44
  %25 = load i8**, i8*** %4, align 8, !dbg !45
  %26 = getelementptr inbounds i8*, i8** %25, i64 1, !dbg !45
  %27 = load i8*, i8** %26, align 8, !dbg !45
  call void @display(i8* %27), !dbg !46
  br label %41, !dbg !47

; <label>:28:                                     ; preds = %8
  %29 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 5), !dbg !47
  %30 = add i64 %29, 1, !dbg !47
  store i64 %30, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 5), !dbg !47
  %31 = load i8**, i8*** %4, align 8, !dbg !48
  %32 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !48
  %33 = load i8*, i8** %32, align 8, !dbg !48
  call void @update(i8* %33), !dbg !49
  br label %41, !dbg !50

; <label>:34:                                     ; preds = %8
  %35 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 6), !dbg !50
  %36 = add i64 %35, 1, !dbg !50
  store i64 %36, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 6), !dbg !50
  call void @exit(i32 0) #6, !dbg !51
  unreachable, !dbg !51

; <label>:37:                                     ; preds = %8
  %38 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 7), !dbg !51
  %39 = add i64 %38, 1, !dbg !51
  store i64 %39, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 7), !dbg !51
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0)), !dbg !52
  br label %41, !dbg !53

; <label>:41:                                     ; preds = %37, %28, %22, %16
  %42 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 2), !dbg !53
  %43 = add i64 %42, 1, !dbg !53
  store i64 %43, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @__profc_main, i64 0, i64 2), !dbg !53
  br label %8, !dbg !32, !llvm.loop !54
                                                  ; No predecessors!
  ret void, !dbg !56
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.instrprof.increment(i8*, i64, i32, i32) #2

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @__isoc99_scanf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @insert(i8*) #0 !dbg !57 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.emprec*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !60, metadata !DIExpression()), !dbg !61
  %5 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @__profc_insert, i64 0, i64 0), !dbg !62
  %6 = add i64 %5, 1, !dbg !62
  store i64 %6, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @__profc_insert, i64 0, i64 0), !dbg !62
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !63, metadata !DIExpression()), !dbg !123
  call void @llvm.dbg.declare(metadata %struct.emprec** %4, metadata !124, metadata !DIExpression()), !dbg !125
  %7 = call noalias i8* @malloc(i64 16) #2, !dbg !126
  %8 = bitcast i8* %7 to %struct.emprec*, !dbg !127
  store %struct.emprec* %8, %struct.emprec** %4, align 8, !dbg !125
  %9 = call noalias i8* @malloc(i64 200) #2, !dbg !128
  %10 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !129
  %11 = getelementptr inbounds %struct.emprec, %struct.emprec* %10, i32 0, i32 1, !dbg !130
  store i8* %9, i8** %11, align 8, !dbg !131
  %12 = load i8*, i8** %2, align 8, !dbg !132
  %13 = call %struct._IO_FILE* @fopen(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)), !dbg !133
  store %struct._IO_FILE* %13, %struct._IO_FILE** %3, align 8, !dbg !134
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !135
  %15 = icmp eq %struct._IO_FILE* %14, null, !dbg !137
  br i1 %15, label %16, label %19, !dbg !138

; <label>:16:                                     ; preds = %1
  %17 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @__profc_insert, i64 0, i64 1), !dbg !138
  %18 = add i64 %17, 1, !dbg !138
  store i64 %18, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @__profc_insert, i64 0, i64 1), !dbg !138
  call void @perror(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0)), !dbg !139
  br label %41, !dbg !139

; <label>:19:                                     ; preds = %1
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)), !dbg !140
  %21 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !142
  %22 = getelementptr inbounds %struct.emprec, %struct.emprec* %21, i32 0, i32 0, !dbg !143
  %23 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32* %22), !dbg !144
  %24 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !145
  %25 = getelementptr inbounds %struct.emprec, %struct.emprec* %24, i32 0, i32 0, !dbg !146
  %26 = bitcast i32* %25 to i8*, !dbg !147
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !148
  %28 = call i64 @fwrite(i8* %26, i64 4, i64 1, %struct._IO_FILE* %27), !dbg !149
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i32 0, i32 0)), !dbg !150
  %30 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !151
  %31 = getelementptr inbounds %struct.emprec, %struct.emprec* %30, i32 0, i32 1, !dbg !152
  %32 = load i8*, i8** %31, align 8, !dbg !152
  %33 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* %32), !dbg !153
  %34 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !154
  %35 = getelementptr inbounds %struct.emprec, %struct.emprec* %34, i32 0, i32 1, !dbg !155
  %36 = load i8*, i8** %35, align 8, !dbg !155
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !156
  %38 = call i64 @fwrite(i8* %36, i64 200, i64 1, %struct._IO_FILE* %37), !dbg !157
  %39 = load i32, i32* @count, align 4, !dbg !158
  %40 = add nsw i32 %39, 1, !dbg !158
  store i32 %40, i32* @count, align 4, !dbg !158
  br label %41

; <label>:41:                                     ; preds = %19, %16
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !159
  %43 = call i32 @fclose(%struct._IO_FILE* %42), !dbg !160
  %44 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !161
  %45 = bitcast %struct.emprec* %44 to i8*, !dbg !161
  call void @free(i8* %45) #2, !dbg !162
  %46 = load %struct.emprec*, %struct.emprec** %4, align 8, !dbg !163
  %47 = getelementptr inbounds %struct.emprec, %struct.emprec* %46, i32 0, i32 1, !dbg !164
  %48 = load i8*, i8** %47, align 8, !dbg !164
  call void @free(i8* %48) #2, !dbg !165
  ret void, !dbg !166
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @display(i8*) #0 !dbg !167 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca %struct.emprec*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !168, metadata !DIExpression()), !dbg !169
  %7 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 0), !dbg !170
  %8 = add i64 %7, 1, !dbg !170
  store i64 %8, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 0), !dbg !170
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !171, metadata !DIExpression()), !dbg !172
  call void @llvm.dbg.declare(metadata i8* %4, metadata !173, metadata !DIExpression()), !dbg !174
  call void @llvm.dbg.declare(metadata i32* %5, metadata !175, metadata !DIExpression()), !dbg !176
  %9 = load i32, i32* @count, align 4, !dbg !177
  store i32 %9, i32* %5, align 4, !dbg !176
  call void @llvm.dbg.declare(metadata %struct.emprec** %6, metadata !178, metadata !DIExpression()), !dbg !179
  %10 = call noalias i8* @malloc(i64 16) #2, !dbg !180
  %11 = bitcast i8* %10 to %struct.emprec*, !dbg !181
  store %struct.emprec* %11, %struct.emprec** %6, align 8, !dbg !179
  %12 = call noalias i8* @malloc(i64 200) #2, !dbg !182
  %13 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !183
  %14 = getelementptr inbounds %struct.emprec, %struct.emprec* %13, i32 0, i32 1, !dbg !184
  store i8* %12, i8** %14, align 8, !dbg !185
  %15 = load i8*, i8** %2, align 8, !dbg !186
  %16 = call %struct._IO_FILE* @fopen(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)), !dbg !187
  store %struct._IO_FILE* %16, %struct._IO_FILE** %3, align 8, !dbg !188
  %17 = load i32, i32* @count, align 4, !dbg !189
  %18 = icmp eq i32 %17, 0, !dbg !191
  br i1 %18, label %19, label %23, !dbg !192

; <label>:19:                                     ; preds = %1
  %20 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 1), !dbg !192
  %21 = add i64 %20, 1, !dbg !192
  store i64 %21, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 1), !dbg !192
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0)), !dbg !193
  br label %65, !dbg !195

; <label>:23:                                     ; preds = %1
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !196
  %25 = icmp eq %struct._IO_FILE* %24, null, !dbg !198
  br i1 %25, label %26, label %29, !dbg !199

; <label>:26:                                     ; preds = %23
  %27 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 2), !dbg !199
  %28 = add i64 %27, 1, !dbg !199
  store i64 %28, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 2), !dbg !199
  call void @perror(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0)), !dbg !200
  br label %57, !dbg !200

; <label>:29:                                     ; preds = %23
  br label %30, !dbg !201

; <label>:30:                                     ; preds = %33, %29
  %31 = load i32, i32* %5, align 4, !dbg !203
  %32 = icmp ne i32 %31, 0, !dbg !201
  br i1 %32, label %33, label %56, !dbg !201

; <label>:33:                                     ; preds = %30
  %34 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 3), !dbg !201
  %35 = add i64 %34, 1, !dbg !201
  store i64 %35, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_display, i64 0, i64 3), !dbg !201
  %36 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !204
  %37 = getelementptr inbounds %struct.emprec, %struct.emprec* %36, i32 0, i32 0, !dbg !206
  %38 = bitcast i32* %37 to i8*, !dbg !207
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !208
  %40 = call i64 @fread(i8* %38, i64 4, i64 1, %struct._IO_FILE* %39), !dbg !209
  %41 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !210
  %42 = getelementptr inbounds %struct.emprec, %struct.emprec* %41, i32 0, i32 0, !dbg !211
  %43 = load i32, i32* %42, align 8, !dbg !211
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 %43), !dbg !212
  %45 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !213
  %46 = getelementptr inbounds %struct.emprec, %struct.emprec* %45, i32 0, i32 1, !dbg !214
  %47 = load i8*, i8** %46, align 8, !dbg !214
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !215
  %49 = call i64 @fread(i8* %47, i64 200, i64 1, %struct._IO_FILE* %48), !dbg !216
  %50 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !217
  %51 = getelementptr inbounds %struct.emprec, %struct.emprec* %50, i32 0, i32 1, !dbg !218
  %52 = load i8*, i8** %51, align 8, !dbg !218
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* %52), !dbg !219
  %54 = load i32, i32* %5, align 4, !dbg !220
  %55 = add nsw i32 %54, -1, !dbg !220
  store i32 %55, i32* %5, align 4, !dbg !220
  br label %30, !dbg !201, !llvm.loop !221

; <label>:56:                                     ; preds = %30
  br label %57

; <label>:57:                                     ; preds = %56, %26
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !223
  %59 = call i32 @fclose(%struct._IO_FILE* %58), !dbg !224
  %60 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !225
  %61 = bitcast %struct.emprec* %60 to i8*, !dbg !225
  call void @free(i8* %61) #2, !dbg !226
  %62 = load %struct.emprec*, %struct.emprec** %6, align 8, !dbg !227
  %63 = getelementptr inbounds %struct.emprec, %struct.emprec* %62, i32 0, i32 1, !dbg !228
  %64 = load i8*, i8** %63, align 8, !dbg !228
  call void @free(i8* %64) #2, !dbg !229
  br label %65, !dbg !230

; <label>:65:                                     ; preds = %57, %19
  ret void, !dbg !230
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @update(i8*) #0 !dbg !231 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca [200 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.emprec*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !232, metadata !DIExpression()), !dbg !233
  %10 = load i64, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 0), !dbg !234
  %11 = add i64 %10, 1, !dbg !234
  store i64 %11, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 0), !dbg !234
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !235, metadata !DIExpression()), !dbg !236
  call void @llvm.dbg.declare(metadata i8* %4, metadata !237, metadata !DIExpression()), !dbg !238
  call void @llvm.dbg.declare(metadata [200 x i8]* %5, metadata !239, metadata !DIExpression()), !dbg !243
  call void @llvm.dbg.declare(metadata i32* %6, metadata !244, metadata !DIExpression()), !dbg !245
  %12 = load i32, i32* @count, align 4, !dbg !246
  store i32 %12, i32* %6, align 4, !dbg !245
  call void @llvm.dbg.declare(metadata i32* %7, metadata !247, metadata !DIExpression()), !dbg !248
  call void @llvm.dbg.declare(metadata i32* %8, metadata !249, metadata !DIExpression()), !dbg !250
  call void @llvm.dbg.declare(metadata %struct.emprec** %9, metadata !251, metadata !DIExpression()), !dbg !252
  %13 = call noalias i8* @malloc(i64 16) #2, !dbg !253
  %14 = bitcast i8* %13 to %struct.emprec*, !dbg !254
  store %struct.emprec* %14, %struct.emprec** %9, align 8, !dbg !252
  %15 = call noalias i8* @malloc(i64 200) #2, !dbg !255
  %16 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !256
  %17 = getelementptr inbounds %struct.emprec, %struct.emprec* %16, i32 0, i32 1, !dbg !257
  store i8* %15, i8** %17, align 8, !dbg !258
  %18 = load i8*, i8** %2, align 8, !dbg !259
  %19 = call %struct._IO_FILE* @fopen(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)), !dbg !260
  store %struct._IO_FILE* %19, %struct._IO_FILE** %3, align 8, !dbg !261
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !262
  %21 = icmp eq %struct._IO_FILE* %20, null, !dbg !264
  br i1 %21, label %22, label %25, !dbg !265

; <label>:22:                                     ; preds = %1
  %23 = load i64, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 1), !dbg !265
  %24 = add i64 %23, 1, !dbg !265
  store i64 %24, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 1), !dbg !265
  call void @perror(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0)), !dbg !266
  br label %109, !dbg !266

; <label>:25:                                     ; preds = %1
  br label %26, !dbg !267

; <label>:26:                                     ; preds = %29, %25
  %27 = load i32, i32* %6, align 4, !dbg !269
  %28 = icmp ne i32 %27, 0, !dbg !267
  br i1 %28, label %29, label %52, !dbg !267

; <label>:29:                                     ; preds = %26
  %30 = load i64, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 2), !dbg !267
  %31 = add i64 %30, 1, !dbg !267
  store i64 %31, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 2), !dbg !267
  %32 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !270
  %33 = getelementptr inbounds %struct.emprec, %struct.emprec* %32, i32 0, i32 0, !dbg !272
  %34 = bitcast i32* %33 to i8*, !dbg !273
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !274
  %36 = call i64 @fread(i8* %34, i64 4, i64 1, %struct._IO_FILE* %35), !dbg !275
  %37 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !276
  %38 = getelementptr inbounds %struct.emprec, %struct.emprec* %37, i32 0, i32 0, !dbg !277
  %39 = load i32, i32* %38, align 8, !dbg !277
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 %39), !dbg !278
  %41 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !279
  %42 = getelementptr inbounds %struct.emprec, %struct.emprec* %41, i32 0, i32 1, !dbg !280
  %43 = load i8*, i8** %42, align 8, !dbg !280
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !281
  %45 = call i64 @fread(i8* %43, i64 200, i64 1, %struct._IO_FILE* %44), !dbg !282
  %46 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !283
  %47 = getelementptr inbounds %struct.emprec, %struct.emprec* %46, i32 0, i32 1, !dbg !284
  %48 = load i8*, i8** %47, align 8, !dbg !284
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* %48), !dbg !285
  %50 = load i32, i32* %6, align 4, !dbg !286
  %51 = add nsw i32 %50, -1, !dbg !286
  store i32 %51, i32* %6, align 4, !dbg !286
  br label %26, !dbg !267, !llvm.loop !287

; <label>:52:                                     ; preds = %26
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i32 0, i32 0)), !dbg !289
  %54 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32* %7), !dbg !290
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !291
  %56 = call i32 @fseek(%struct._IO_FILE* %55, i64 0, i32 0), !dbg !292
  %57 = load i32, i32* @count, align 4, !dbg !293
  store i32 %57, i32* %6, align 4, !dbg !294
  br label %58, !dbg !295

; <label>:58:                                     ; preds = %84, %52
  %59 = load i32, i32* %6, align 4, !dbg !296
  %60 = icmp ne i32 %59, 0, !dbg !295
  br i1 %60, label %61, label %92, !dbg !295

; <label>:61:                                     ; preds = %58
  %62 = load i64, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 3), !dbg !295
  %63 = add i64 %62, 1, !dbg !295
  store i64 %63, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 3), !dbg !295
  %64 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !297
  %65 = getelementptr inbounds %struct.emprec, %struct.emprec* %64, i32 0, i32 0, !dbg !299
  %66 = bitcast i32* %65 to i8*, !dbg !300
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !301
  %68 = call i64 @fread(i8* %66, i64 4, i64 1, %struct._IO_FILE* %67), !dbg !302
  %69 = load i32, i32* %7, align 4, !dbg !303
  %70 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !305
  %71 = getelementptr inbounds %struct.emprec, %struct.emprec* %70, i32 0, i32 0, !dbg !306
  %72 = load i32, i32* %71, align 8, !dbg !306
  %73 = icmp eq i32 %69, %72, !dbg !307
  br i1 %73, label %74, label %84, !dbg !308

; <label>:74:                                     ; preds = %61
  %75 = load i64, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 4), !dbg !308
  %76 = add i64 %75, 1, !dbg !308
  store i64 %76, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 4), !dbg !308
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0)), !dbg !309
  %78 = getelementptr inbounds [200 x i8], [200 x i8]* %5, i32 0, i32 0, !dbg !311
  %79 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* %78), !dbg !312
  %80 = getelementptr inbounds [200 x i8], [200 x i8]* %5, i32 0, i32 0, !dbg !313
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !314
  %82 = call i64 @fwrite(i8* %80, i64 200, i64 1, %struct._IO_FILE* %81), !dbg !315
  %83 = trunc i64 %82 to i32, !dbg !315
  store i32 %83, i32* %8, align 4, !dbg !316
  br label %92, !dbg !317

; <label>:84:                                     ; preds = %61
  %85 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !318
  %86 = getelementptr inbounds %struct.emprec, %struct.emprec* %85, i32 0, i32 1, !dbg !319
  %87 = load i8*, i8** %86, align 8, !dbg !319
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !320
  %89 = call i64 @fread(i8* %87, i64 200, i64 1, %struct._IO_FILE* %88), !dbg !321
  %90 = load i32, i32* %6, align 4, !dbg !322
  %91 = add nsw i32 %90, -1, !dbg !322
  store i32 %91, i32* %6, align 4, !dbg !322
  br label %58, !dbg !295, !llvm.loop !323

; <label>:92:                                     ; preds = %74, %58
  %93 = load i32, i32* %8, align 4, !dbg !325
  %94 = icmp eq i32 %93, 1, !dbg !327
  br i1 %94, label %95, label %99, !dbg !328

; <label>:95:                                     ; preds = %92
  %96 = load i64, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 5), !dbg !328
  %97 = add i64 %96, 1, !dbg !328
  store i64 %97, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @__profc_update, i64 0, i64 5), !dbg !328
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i32 0, i32 0)), !dbg !329
  br label %101, !dbg !329

; <label>:99:                                     ; preds = %92
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i32 0, i32 0)), !dbg !330
  br label %101

; <label>:101:                                    ; preds = %99, %95
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !331
  %103 = call i32 @fclose(%struct._IO_FILE* %102), !dbg !332
  %104 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !333
  %105 = bitcast %struct.emprec* %104 to i8*, !dbg !333
  call void @free(i8* %105) #2, !dbg !334
  %106 = load %struct.emprec*, %struct.emprec** %9, align 8, !dbg !335
  %107 = getelementptr inbounds %struct.emprec, %struct.emprec* %106, i32 0, i32 1, !dbg !336
  %108 = load i8*, i8** %107, align 8, !dbg !336
  call void @free(i8* %108) #2, !dbg !337
  br label %109

; <label>:109:                                    ; preds = %101, %22
  ret void, !dbg !338
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

declare dso_local void @perror(i8*) #3

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!17, !18, !19}
!llvm.ident = !{!20}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "count", scope: !2, file: !3, line: 19, type: !11, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !16)
!3 = !DIFile(filename: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example6.c", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!4 = !{}
!5 = !{!6, !13, !15}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "emp", file: !3, line: 14, baseType: !8)
!8 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emprec", file: !3, line: 10, size: 128, elements: !9)
!9 = !{!10, !12}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "empid", scope: !8, file: !3, line: 11, baseType: !11, size: 32)
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8, file: !3, line: 12, baseType: !13, size: 64, offset: 64)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!16 = !{!0}
!17 = !{i32 2, !"Dwarf Version", i32 4}
!18 = !{i32 2, !"Debug Info Version", i32 3}
!19 = !{i32 1, !"wchar_size", i32 4}
!20 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!21 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 21, type: !22, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: false, unit: !2, retainedNodes: !4)
!22 = !DISubroutineType(types: !23)
!23 = !{null, !11, !24}
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!25 = !DILocalVariable(name: "argc", arg: 1, scope: !21, file: !3, line: 21, type: !11)
!26 = !DILocation(line: 21, column: 15, scope: !21)
!27 = !DILocalVariable(name: "argv", arg: 2, scope: !21, file: !3, line: 21, type: !24)
!28 = !DILocation(line: 21, column: 27, scope: !21)
!29 = !DILocation(line: 21, column: 35, scope: !21)
!30 = !DILocalVariable(name: "choice", scope: !21, file: !3, line: 22, type: !11)
!31 = !DILocation(line: 22, column: 7, scope: !21)
!32 = !DILocation(line: 24, column: 3, scope: !21)
!33 = !DILocation(line: 25, column: 5, scope: !34)
!34 = distinct !DILexicalBlock(scope: !21, file: !3, line: 24, column: 13)
!35 = !DILocation(line: 26, column: 5, scope: !34)
!36 = !DILocation(line: 27, column: 5, scope: !34)
!37 = !DILocation(line: 28, column: 5, scope: !34)
!38 = !DILocation(line: 29, column: 13, scope: !34)
!39 = !DILocation(line: 29, column: 5, scope: !34)
!40 = !DILocation(line: 29, column: 21, scope: !34)
!41 = !DILocation(line: 31, column: 14, scope: !42)
!42 = distinct !DILexicalBlock(scope: !34, file: !3, line: 29, column: 21)
!43 = !DILocation(line: 31, column: 7, scope: !42)
!44 = !DILocation(line: 32, column: 7, scope: !42)
!45 = !DILocation(line: 34, column: 15, scope: !42)
!46 = !DILocation(line: 34, column: 7, scope: !42)
!47 = !DILocation(line: 35, column: 7, scope: !42)
!48 = !DILocation(line: 37, column: 14, scope: !42)
!49 = !DILocation(line: 37, column: 7, scope: !42)
!50 = !DILocation(line: 38, column: 7, scope: !42)
!51 = !DILocation(line: 40, column: 7, scope: !42)
!52 = !DILocation(line: 42, column: 7, scope: !42)
!53 = !DILocation(line: 43, column: 5, scope: !42)
!54 = distinct !{!54, !32, !55}
!55 = !DILocation(line: 44, column: 3, scope: !21)
!56 = !DILocation(line: 45, column: 1, scope: !21)
!57 = distinct !DISubprogram(name: "insert", scope: !3, file: !3, line: 48, type: !58, isLocal: false, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !2, retainedNodes: !4)
!58 = !DISubroutineType(types: !59)
!59 = !{null, !13}
!60 = !DILocalVariable(name: "a", arg: 1, scope: !57, file: !3, line: 48, type: !13)
!61 = !DILocation(line: 48, column: 19, scope: !57)
!62 = !DILocation(line: 48, column: 22, scope: !57)
!63 = !DILocalVariable(name: "fp1", scope: !57, file: !3, line: 49, type: !64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !66, line: 7, baseType: !67)
!66 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!67 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !68, line: 49, size: 1728, elements: !69)
!68 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!69 = !{!70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !85, !87, !88, !89, !93, !95, !97, !101, !104, !106, !109, !112, !113, !114, !118, !119}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !67, file: !68, line: 51, baseType: !11, size: 32)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !67, file: !68, line: 54, baseType: !13, size: 64, offset: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !67, file: !68, line: 55, baseType: !13, size: 64, offset: 128)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !67, file: !68, line: 56, baseType: !13, size: 64, offset: 192)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !67, file: !68, line: 57, baseType: !13, size: 64, offset: 256)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !67, file: !68, line: 58, baseType: !13, size: 64, offset: 320)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !67, file: !68, line: 59, baseType: !13, size: 64, offset: 384)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !67, file: !68, line: 60, baseType: !13, size: 64, offset: 448)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !67, file: !68, line: 61, baseType: !13, size: 64, offset: 512)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !67, file: !68, line: 64, baseType: !13, size: 64, offset: 576)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !67, file: !68, line: 65, baseType: !13, size: 64, offset: 640)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !67, file: !68, line: 66, baseType: !13, size: 64, offset: 704)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !67, file: !68, line: 68, baseType: !83, size: 64, offset: 768)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !68, line: 36, flags: DIFlagFwdDecl)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !67, file: !68, line: 70, baseType: !86, size: 64, offset: 832)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !67, file: !68, line: 72, baseType: !11, size: 32, offset: 896)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !67, file: !68, line: 73, baseType: !11, size: 32, offset: 928)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !67, file: !68, line: 74, baseType: !90, size: 64, offset: 960)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !91, line: 150, baseType: !92)
!91 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!92 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !67, file: !68, line: 77, baseType: !94, size: 16, offset: 1024)
!94 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !67, file: !68, line: 78, baseType: !96, size: 8, offset: 1040)
!96 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !67, file: !68, line: 79, baseType: !98, size: 8, offset: 1048)
!98 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !99)
!99 = !{!100}
!100 = !DISubrange(count: 1)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !67, file: !68, line: 81, baseType: !102, size: 64, offset: 1088)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !68, line: 43, baseType: null)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !67, file: !68, line: 89, baseType: !105, size: 64, offset: 1152)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !91, line: 151, baseType: !92)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !67, file: !68, line: 91, baseType: !107, size: 64, offset: 1216)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !68, line: 37, flags: DIFlagFwdDecl)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !67, file: !68, line: 92, baseType: !110, size: 64, offset: 1280)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !68, line: 38, flags: DIFlagFwdDecl)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !67, file: !68, line: 93, baseType: !86, size: 64, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !67, file: !68, line: 94, baseType: !15, size: 64, offset: 1408)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !67, file: !68, line: 95, baseType: !115, size: 64, offset: 1472)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !116, line: 62, baseType: !117)
!116 = !DIFile(filename: "/usr/lib64/llvm/7/bin/../../../../lib/clang/7.0.1/include/stddef.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!117 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !67, file: !68, line: 96, baseType: !11, size: 32, offset: 1536)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !67, file: !68, line: 98, baseType: !120, size: 160, offset: 1568)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 160, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 20)
!123 = !DILocation(line: 49, column: 9, scope: !57)
!124 = !DILocalVariable(name: "temp1", scope: !57, file: !3, line: 50, type: !6)
!125 = !DILocation(line: 50, column: 8, scope: !57)
!126 = !DILocation(line: 50, column: 23, scope: !57)
!127 = !DILocation(line: 50, column: 16, scope: !57)
!128 = !DILocation(line: 52, column: 15, scope: !57)
!129 = !DILocation(line: 51, column: 3, scope: !57)
!130 = !DILocation(line: 51, column: 10, scope: !57)
!131 = !DILocation(line: 51, column: 15, scope: !57)
!132 = !DILocation(line: 54, column: 15, scope: !57)
!133 = !DILocation(line: 54, column: 9, scope: !57)
!134 = !DILocation(line: 54, column: 7, scope: !57)
!135 = !DILocation(line: 55, column: 7, scope: !136)
!136 = distinct !DILexicalBlock(scope: !57, file: !3, line: 55, column: 7)
!137 = !DILocation(line: 55, column: 11, scope: !136)
!138 = !DILocation(line: 55, column: 7, scope: !57)
!139 = !DILocation(line: 56, column: 5, scope: !136)
!140 = !DILocation(line: 58, column: 5, scope: !141)
!141 = distinct !DILexicalBlock(scope: !136, file: !3, line: 57, column: 8)
!142 = !DILocation(line: 59, column: 18, scope: !141)
!143 = !DILocation(line: 59, column: 25, scope: !141)
!144 = !DILocation(line: 59, column: 5, scope: !141)
!145 = !DILocation(line: 60, column: 13, scope: !141)
!146 = !DILocation(line: 60, column: 20, scope: !141)
!147 = !DILocation(line: 60, column: 12, scope: !141)
!148 = !DILocation(line: 60, column: 43, scope: !141)
!149 = !DILocation(line: 60, column: 5, scope: !141)
!150 = !DILocation(line: 61, column: 5, scope: !141)
!151 = !DILocation(line: 62, column: 23, scope: !141)
!152 = !DILocation(line: 62, column: 30, scope: !141)
!153 = !DILocation(line: 62, column: 5, scope: !141)
!154 = !DILocation(line: 63, column: 12, scope: !141)
!155 = !DILocation(line: 63, column: 19, scope: !141)
!156 = !DILocation(line: 63, column: 33, scope: !141)
!157 = !DILocation(line: 63, column: 5, scope: !141)
!158 = !DILocation(line: 64, column: 10, scope: !141)
!159 = !DILocation(line: 66, column: 10, scope: !57)
!160 = !DILocation(line: 66, column: 3, scope: !57)
!161 = !DILocation(line: 67, column: 8, scope: !57)
!162 = !DILocation(line: 67, column: 3, scope: !57)
!163 = !DILocation(line: 68, column: 8, scope: !57)
!164 = !DILocation(line: 68, column: 15, scope: !57)
!165 = !DILocation(line: 68, column: 3, scope: !57)
!166 = !DILocation(line: 69, column: 1, scope: !57)
!167 = distinct !DISubprogram(name: "display", scope: !3, file: !3, line: 72, type: !58, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !2, retainedNodes: !4)
!168 = !DILocalVariable(name: "a", arg: 1, scope: !167, file: !3, line: 72, type: !13)
!169 = !DILocation(line: 72, column: 20, scope: !167)
!170 = !DILocation(line: 72, column: 23, scope: !167)
!171 = !DILocalVariable(name: "fp1", scope: !167, file: !3, line: 73, type: !64)
!172 = !DILocation(line: 73, column: 9, scope: !167)
!173 = !DILocalVariable(name: "ch", scope: !167, file: !3, line: 74, type: !14)
!174 = !DILocation(line: 74, column: 8, scope: !167)
!175 = !DILocalVariable(name: "var", scope: !167, file: !3, line: 75, type: !11)
!176 = !DILocation(line: 75, column: 7, scope: !167)
!177 = !DILocation(line: 75, column: 13, scope: !167)
!178 = !DILocalVariable(name: "temp", scope: !167, file: !3, line: 76, type: !6)
!179 = !DILocation(line: 76, column: 8, scope: !167)
!180 = !DILocation(line: 76, column: 22, scope: !167)
!181 = !DILocation(line: 76, column: 15, scope: !167)
!182 = !DILocation(line: 77, column: 24, scope: !167)
!183 = !DILocation(line: 77, column: 3, scope: !167)
!184 = !DILocation(line: 77, column: 9, scope: !167)
!185 = !DILocation(line: 77, column: 14, scope: !167)
!186 = !DILocation(line: 79, column: 15, scope: !167)
!187 = !DILocation(line: 79, column: 9, scope: !167)
!188 = !DILocation(line: 79, column: 7, scope: !167)
!189 = !DILocation(line: 80, column: 7, scope: !190)
!190 = distinct !DILexicalBlock(scope: !167, file: !3, line: 80, column: 7)
!191 = !DILocation(line: 80, column: 13, scope: !190)
!192 = !DILocation(line: 80, column: 7, scope: !167)
!193 = !DILocation(line: 81, column: 5, scope: !194)
!194 = distinct !DILexicalBlock(scope: !190, file: !3, line: 80, column: 19)
!195 = !DILocation(line: 82, column: 5, scope: !194)
!196 = !DILocation(line: 84, column: 7, scope: !197)
!197 = distinct !DILexicalBlock(scope: !167, file: !3, line: 84, column: 7)
!198 = !DILocation(line: 84, column: 11, scope: !197)
!199 = !DILocation(line: 84, column: 7, scope: !167)
!200 = !DILocation(line: 85, column: 5, scope: !197)
!201 = !DILocation(line: 87, column: 5, scope: !202)
!202 = distinct !DILexicalBlock(scope: !197, file: !3, line: 86, column: 8)
!203 = !DILocation(line: 87, column: 12, scope: !202)
!204 = !DILocation(line: 89, column: 14, scope: !205)
!205 = distinct !DILexicalBlock(scope: !202, file: !3, line: 88, column: 5)
!206 = !DILocation(line: 89, column: 20, scope: !205)
!207 = !DILocation(line: 89, column: 13, scope: !205)
!208 = !DILocation(line: 89, column: 43, scope: !205)
!209 = !DILocation(line: 89, column: 7, scope: !205)
!210 = !DILocation(line: 90, column: 20, scope: !205)
!211 = !DILocation(line: 90, column: 26, scope: !205)
!212 = !DILocation(line: 90, column: 7, scope: !205)
!213 = !DILocation(line: 91, column: 13, scope: !205)
!214 = !DILocation(line: 91, column: 19, scope: !205)
!215 = !DILocation(line: 91, column: 33, scope: !205)
!216 = !DILocation(line: 91, column: 7, scope: !205)
!217 = !DILocation(line: 92, column: 23, scope: !205)
!218 = !DILocation(line: 92, column: 29, scope: !205)
!219 = !DILocation(line: 92, column: 7, scope: !205)
!220 = !DILocation(line: 93, column: 10, scope: !205)
!221 = distinct !{!221, !201, !222}
!222 = !DILocation(line: 94, column: 5, scope: !202)
!223 = !DILocation(line: 96, column: 10, scope: !167)
!224 = !DILocation(line: 96, column: 3, scope: !167)
!225 = !DILocation(line: 97, column: 8, scope: !167)
!226 = !DILocation(line: 97, column: 3, scope: !167)
!227 = !DILocation(line: 98, column: 8, scope: !167)
!228 = !DILocation(line: 98, column: 14, scope: !167)
!229 = !DILocation(line: 98, column: 3, scope: !167)
!230 = !DILocation(line: 99, column: 1, scope: !167)
!231 = distinct !DISubprogram(name: "update", scope: !3, file: !3, line: 102, type: !58, isLocal: false, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !2, retainedNodes: !4)
!232 = !DILocalVariable(name: "a", arg: 1, scope: !231, file: !3, line: 102, type: !13)
!233 = !DILocation(line: 102, column: 19, scope: !231)
!234 = !DILocation(line: 102, column: 22, scope: !231)
!235 = !DILocalVariable(name: "fp1", scope: !231, file: !3, line: 103, type: !64)
!236 = !DILocation(line: 103, column: 9, scope: !231)
!237 = !DILocalVariable(name: "ch", scope: !231, file: !3, line: 104, type: !14)
!238 = !DILocation(line: 104, column: 8, scope: !231)
!239 = !DILocalVariable(name: "name", scope: !231, file: !3, line: 104, type: !240)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1600, elements: !241)
!241 = !{!242}
!242 = !DISubrange(count: 200)
!243 = !DILocation(line: 104, column: 12, scope: !231)
!244 = !DILocalVariable(name: "var", scope: !231, file: !3, line: 105, type: !11)
!245 = !DILocation(line: 105, column: 7, scope: !231)
!246 = !DILocation(line: 105, column: 13, scope: !231)
!247 = !DILocalVariable(name: "id", scope: !231, file: !3, line: 105, type: !11)
!248 = !DILocation(line: 105, column: 20, scope: !231)
!249 = !DILocalVariable(name: "c", scope: !231, file: !3, line: 105, type: !11)
!250 = !DILocation(line: 105, column: 24, scope: !231)
!251 = !DILocalVariable(name: "temp", scope: !231, file: !3, line: 106, type: !6)
!252 = !DILocation(line: 106, column: 8, scope: !231)
!253 = !DILocation(line: 106, column: 22, scope: !231)
!254 = !DILocation(line: 106, column: 15, scope: !231)
!255 = !DILocation(line: 107, column: 24, scope: !231)
!256 = !DILocation(line: 107, column: 3, scope: !231)
!257 = !DILocation(line: 107, column: 9, scope: !231)
!258 = !DILocation(line: 107, column: 14, scope: !231)
!259 = !DILocation(line: 109, column: 15, scope: !231)
!260 = !DILocation(line: 109, column: 9, scope: !231)
!261 = !DILocation(line: 109, column: 7, scope: !231)
!262 = !DILocation(line: 110, column: 7, scope: !263)
!263 = distinct !DILexicalBlock(scope: !231, file: !3, line: 110, column: 7)
!264 = !DILocation(line: 110, column: 11, scope: !263)
!265 = !DILocation(line: 110, column: 7, scope: !231)
!266 = !DILocation(line: 111, column: 5, scope: !263)
!267 = !DILocation(line: 113, column: 5, scope: !268)
!268 = distinct !DILexicalBlock(scope: !263, file: !3, line: 112, column: 8)
!269 = !DILocation(line: 113, column: 12, scope: !268)
!270 = !DILocation(line: 116, column: 14, scope: !271)
!271 = distinct !DILexicalBlock(scope: !268, file: !3, line: 115, column: 5)
!272 = !DILocation(line: 116, column: 20, scope: !271)
!273 = !DILocation(line: 116, column: 13, scope: !271)
!274 = !DILocation(line: 116, column: 43, scope: !271)
!275 = !DILocation(line: 116, column: 7, scope: !271)
!276 = !DILocation(line: 117, column: 20, scope: !271)
!277 = !DILocation(line: 117, column: 26, scope: !271)
!278 = !DILocation(line: 117, column: 7, scope: !271)
!279 = !DILocation(line: 118, column: 13, scope: !271)
!280 = !DILocation(line: 118, column: 19, scope: !271)
!281 = !DILocation(line: 118, column: 33, scope: !271)
!282 = !DILocation(line: 118, column: 7, scope: !271)
!283 = !DILocation(line: 119, column: 23, scope: !271)
!284 = !DILocation(line: 119, column: 29, scope: !271)
!285 = !DILocation(line: 119, column: 7, scope: !271)
!286 = !DILocation(line: 120, column: 10, scope: !271)
!287 = distinct !{!287, !267, !288}
!288 = !DILocation(line: 121, column: 5, scope: !268)
!289 = !DILocation(line: 122, column: 5, scope: !268)
!290 = !DILocation(line: 123, column: 5, scope: !268)
!291 = !DILocation(line: 124, column: 11, scope: !268)
!292 = !DILocation(line: 124, column: 5, scope: !268)
!293 = !DILocation(line: 125, column: 11, scope: !268)
!294 = !DILocation(line: 125, column: 9, scope: !268)
!295 = !DILocation(line: 126, column: 5, scope: !268)
!296 = !DILocation(line: 126, column: 12, scope: !268)
!297 = !DILocation(line: 128, column: 14, scope: !298)
!298 = distinct !DILexicalBlock(scope: !268, file: !3, line: 127, column: 5)
!299 = !DILocation(line: 128, column: 20, scope: !298)
!300 = !DILocation(line: 128, column: 13, scope: !298)
!301 = !DILocation(line: 128, column: 43, scope: !298)
!302 = !DILocation(line: 128, column: 7, scope: !298)
!303 = !DILocation(line: 129, column: 11, scope: !304)
!304 = distinct !DILexicalBlock(scope: !298, file: !3, line: 129, column: 11)
!305 = !DILocation(line: 129, column: 17, scope: !304)
!306 = !DILocation(line: 129, column: 23, scope: !304)
!307 = !DILocation(line: 129, column: 14, scope: !304)
!308 = !DILocation(line: 129, column: 11, scope: !298)
!309 = !DILocation(line: 130, column: 9, scope: !310)
!310 = distinct !DILexicalBlock(scope: !304, file: !3, line: 129, column: 30)
!311 = !DILocation(line: 131, column: 27, scope: !310)
!312 = !DILocation(line: 131, column: 9, scope: !310)
!313 = !DILocation(line: 132, column: 20, scope: !310)
!314 = !DILocation(line: 132, column: 34, scope: !310)
!315 = !DILocation(line: 132, column: 13, scope: !310)
!316 = !DILocation(line: 132, column: 11, scope: !310)
!317 = !DILocation(line: 133, column: 9, scope: !310)
!318 = !DILocation(line: 135, column: 13, scope: !298)
!319 = !DILocation(line: 135, column: 19, scope: !298)
!320 = !DILocation(line: 135, column: 33, scope: !298)
!321 = !DILocation(line: 135, column: 7, scope: !298)
!322 = !DILocation(line: 136, column: 10, scope: !298)
!323 = distinct !{!323, !295, !324}
!324 = !DILocation(line: 137, column: 5, scope: !268)
!325 = !DILocation(line: 138, column: 9, scope: !326)
!326 = distinct !DILexicalBlock(scope: !268, file: !3, line: 138, column: 9)
!327 = !DILocation(line: 138, column: 11, scope: !326)
!328 = !DILocation(line: 138, column: 9, scope: !268)
!329 = !DILocation(line: 139, column: 7, scope: !326)
!330 = !DILocation(line: 141, column: 7, scope: !326)
!331 = !DILocation(line: 142, column: 12, scope: !268)
!332 = !DILocation(line: 142, column: 5, scope: !268)
!333 = !DILocation(line: 143, column: 10, scope: !268)
!334 = !DILocation(line: 143, column: 5, scope: !268)
!335 = !DILocation(line: 144, column: 10, scope: !268)
!336 = !DILocation(line: 144, column: 16, scope: !268)
!337 = !DILocation(line: 144, column: 5, scope: !268)
!338 = !DILocation(line: 146, column: 1, scope: !231)
