; ModuleID = '/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example4.c'
source_filename = "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example4.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$__llvm_profile_filename = comdat any

@.str = private unnamed_addr constant [29 x i8] c"Enter the size of the list: \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"Enter the elements in list:\0A\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"The sorted list in ascending order is\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%d  \00", align 1
@__llvm_coverage_mapping = internal constant { { i32, i32, i32, i32 }, [2 x <{ i64, i32, i64 }>], [224 x i8] } { { i32, i32, i32, i32 } { i32 2, i32 78, i32 146, i32 2 }, [2 x <{ i64, i32, i64 }>] [<{ i64, i32, i64 }> <{ i64 -2624081020897602054, i32 61, i64 304155309144 }>, <{ i64, i32, i64 }> <{ i64 -6414643943281764369, i32 85, i64 2509857698620709302 }>], [224 x i8] c"\01L/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example4.c\01\00\02\01\05\01\09\09\01\08\0C\10\02\03\06\0F\00\17\05\00\19\00\1C\05\00\1D\00\9E\80\80\80\08\05\00\1E\02\04\07\05\0F\00\17\09\00\19\00\1C\09\00\1D\00\9E\80\80\80\08\09\00\1E\02\04\01\00\00\0D\01\1A>\11\02\01\03\07\00\13\05\00\14\00\95\80\80\80\08\05\00\15\0D\04\05\01\09\00\0D\09\00\0E\00\8F\80\80\80\08\09\00\0F\02\06\05\03\09\00\11\0D\00\12\00\93\80\80\80\08\0D\00\13\07\06\0D\01\0B\00\1C\11\00\1D\00\9E\80\80\80\08\11\00\1E\04\08" }, section "__llvm_covmap", align 8
@__profc_main = private global [3 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_main = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -2624081020897602054, i64 304155309144, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i32 0, i32 0), i8* bitcast (i32 ()* @main to i8*), i8* null, i32 3, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_selection = private global [5 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_selection = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -6414643943281764369, i64 2509857698620709302, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i32 0, i32 0), i8* bitcast (void (i32*, i32, i32, i32, i32)* @selection to i8*), i8* null, i32 5, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__llvm_prf_nm = private constant [24 x i8] c"\0E\16x\DA\CBM\CC\CCc,N\CDIM.\C9\CC\CF\03\00'l\05m", section "__llvm_prf_names"
@llvm.used = appending global [4 x i8*] [i8* bitcast ({ { i32, i32, i32, i32 }, [2 x <{ i64, i32, i64 }>], [224 x i8] }* @__llvm_coverage_mapping to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_main to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_selection to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__llvm_prf_nm, i32 0, i32 0)], section "llvm.metadata"
@__llvm_profile_filename = constant [30 x i8] c"example4-ropfuscated.profdata\00", comdat

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !7 {
  %1 = alloca i32, align 4
  %2 = alloca [30 x i32], align 16
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %7 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 0), !dbg !11
  %8 = add i64 %7, 1, !dbg !11
  store i64 %8, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 0), !dbg !11
  call void @llvm.dbg.declare(metadata [30 x i32]* %2, metadata !12, metadata !DIExpression()), !dbg !16
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.declare(metadata i32* %4, metadata !19, metadata !DIExpression()), !dbg !20
  call void @llvm.dbg.declare(metadata i32* %5, metadata !21, metadata !DIExpression()), !dbg !22
  call void @llvm.dbg.declare(metadata i32* %6, metadata !23, metadata !DIExpression()), !dbg !24
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0)), !dbg !25
  %10 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32* %3), !dbg !26
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0)), !dbg !27
  store i32 0, i32* %5, align 4, !dbg !28
  br label %12, !dbg !30

; <label>:12:                                     ; preds = %23, %0
  %13 = load i32, i32* %5, align 4, !dbg !31
  %14 = load i32, i32* %3, align 4, !dbg !33
  %15 = icmp slt i32 %13, %14, !dbg !34
  br i1 %15, label %16, label %26, !dbg !35

; <label>:16:                                     ; preds = %12
  %17 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 1), !dbg !35
  %18 = add i64 %17, 1, !dbg !35
  store i64 %18, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 1), !dbg !35
  %19 = load i32, i32* %5, align 4, !dbg !36
  %20 = sext i32 %19 to i64, !dbg !38
  %21 = getelementptr inbounds [30 x i32], [30 x i32]* %2, i64 0, i64 %20, !dbg !38
  %22 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32* %21), !dbg !39
  br label %23, !dbg !40

; <label>:23:                                     ; preds = %16
  %24 = load i32, i32* %5, align 4, !dbg !41
  %25 = add nsw i32 %24, 1, !dbg !41
  store i32 %25, i32* %5, align 4, !dbg !41
  br label %12, !dbg !42, !llvm.loop !43

; <label>:26:                                     ; preds = %12
  %27 = getelementptr inbounds [30 x i32], [30 x i32]* %2, i32 0, i32 0, !dbg !45
  %28 = load i32, i32* %3, align 4, !dbg !46
  call void @selection(i32* %27, i32 0, i32 0, i32 %28, i32 1), !dbg !47
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0)), !dbg !48
  store i32 0, i32* %5, align 4, !dbg !49
  br label %30, !dbg !51

; <label>:30:                                     ; preds = %42, %26
  %31 = load i32, i32* %5, align 4, !dbg !52
  %32 = load i32, i32* %3, align 4, !dbg !54
  %33 = icmp slt i32 %31, %32, !dbg !55
  br i1 %33, label %34, label %45, !dbg !56

; <label>:34:                                     ; preds = %30
  %35 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 2), !dbg !56
  %36 = add i64 %35, 1, !dbg !56
  store i64 %36, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 2), !dbg !56
  %37 = load i32, i32* %5, align 4, !dbg !57
  %38 = sext i32 %37 to i64, !dbg !59
  %39 = getelementptr inbounds [30 x i32], [30 x i32]* %2, i64 0, i64 %38, !dbg !59
  %40 = load i32, i32* %39, align 4, !dbg !59
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %40), !dbg !60
  br label %42, !dbg !61

; <label>:42:                                     ; preds = %34
  %43 = load i32, i32* %5, align 4, !dbg !62
  %44 = add nsw i32 %43, 1, !dbg !62
  store i32 %44, i32* %5, align 4, !dbg !62
  br label %30, !dbg !63, !llvm.loop !64

; <label>:45:                                     ; preds = %30
  ret i32 0, !dbg !66
}

; Function Attrs: nounwind
declare void @llvm.instrprof.increment(i8*, i64, i32, i32) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @__isoc99_scanf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @selection(i32*, i32, i32, i32, i32) #0 !dbg !67 {
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !71, metadata !DIExpression()), !dbg !72
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !73, metadata !DIExpression()), !dbg !74
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !75, metadata !DIExpression()), !dbg !76
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !77, metadata !DIExpression()), !dbg !78
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !79, metadata !DIExpression()), !dbg !80
  %12 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 0), !dbg !81
  %13 = add i64 %12, 1, !dbg !81
  store i64 %13, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 0), !dbg !81
  call void @llvm.dbg.declare(metadata i32* %11, metadata !82, metadata !DIExpression()), !dbg !83
  %14 = load i32, i32* %7, align 4, !dbg !84
  %15 = load i32, i32* %9, align 4, !dbg !86
  %16 = sub nsw i32 %15, 1, !dbg !87
  %17 = icmp slt i32 %14, %16, !dbg !88
  br i1 %17, label %18, label %79, !dbg !89

; <label>:18:                                     ; preds = %5
  %19 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 1), !dbg !89
  %20 = add i64 %19, 1, !dbg !89
  store i64 %20, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 1), !dbg !89
  %21 = load i32, i32* %10, align 4, !dbg !90
  %22 = icmp ne i32 %21, 0, !dbg !90
  br i1 %22, label %23, label %28, !dbg !93

; <label>:23:                                     ; preds = %18
  %24 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 2), !dbg !93
  %25 = add i64 %24, 1, !dbg !93
  store i64 %25, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 2), !dbg !93
  %26 = load i32, i32* %7, align 4, !dbg !94
  %27 = add nsw i32 %26, 1, !dbg !96
  store i32 %27, i32* %8, align 4, !dbg !97
  br label %28, !dbg !98

; <label>:28:                                     ; preds = %23, %18
  %29 = load i32, i32* %8, align 4, !dbg !99
  %30 = load i32, i32* %9, align 4, !dbg !101
  %31 = icmp slt i32 %29, %30, !dbg !102
  br i1 %31, label %32, label %74, !dbg !103

; <label>:32:                                     ; preds = %28
  %33 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 3), !dbg !103
  %34 = add i64 %33, 1, !dbg !103
  store i64 %34, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 3), !dbg !103
  %35 = load i32*, i32** %6, align 8, !dbg !104
  %36 = load i32, i32* %7, align 4, !dbg !107
  %37 = sext i32 %36 to i64, !dbg !104
  %38 = getelementptr inbounds i32, i32* %35, i64 %37, !dbg !104
  %39 = load i32, i32* %38, align 4, !dbg !104
  %40 = load i32*, i32** %6, align 8, !dbg !108
  %41 = load i32, i32* %8, align 4, !dbg !109
  %42 = sext i32 %41 to i64, !dbg !108
  %43 = getelementptr inbounds i32, i32* %40, i64 %42, !dbg !108
  %44 = load i32, i32* %43, align 4, !dbg !108
  %45 = icmp sgt i32 %39, %44, !dbg !110
  br i1 %45, label %46, label %68, !dbg !111

; <label>:46:                                     ; preds = %32
  %47 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 4), !dbg !111
  %48 = add i64 %47, 1, !dbg !111
  store i64 %48, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_selection, i64 0, i64 4), !dbg !111
  %49 = load i32*, i32** %6, align 8, !dbg !112
  %50 = load i32, i32* %7, align 4, !dbg !114
  %51 = sext i32 %50 to i64, !dbg !112
  %52 = getelementptr inbounds i32, i32* %49, i64 %51, !dbg !112
  %53 = load i32, i32* %52, align 4, !dbg !112
  store i32 %53, i32* %11, align 4, !dbg !115
  %54 = load i32*, i32** %6, align 8, !dbg !116
  %55 = load i32, i32* %8, align 4, !dbg !117
  %56 = sext i32 %55 to i64, !dbg !116
  %57 = getelementptr inbounds i32, i32* %54, i64 %56, !dbg !116
  %58 = load i32, i32* %57, align 4, !dbg !116
  %59 = load i32*, i32** %6, align 8, !dbg !118
  %60 = load i32, i32* %7, align 4, !dbg !119
  %61 = sext i32 %60 to i64, !dbg !118
  %62 = getelementptr inbounds i32, i32* %59, i64 %61, !dbg !118
  store i32 %58, i32* %62, align 4, !dbg !120
  %63 = load i32, i32* %11, align 4, !dbg !121
  %64 = load i32*, i32** %6, align 8, !dbg !122
  %65 = load i32, i32* %8, align 4, !dbg !123
  %66 = sext i32 %65 to i64, !dbg !122
  %67 = getelementptr inbounds i32, i32* %64, i64 %66, !dbg !122
  store i32 %63, i32* %67, align 4, !dbg !124
  br label %68, !dbg !125

; <label>:68:                                     ; preds = %46, %32
  %69 = load i32*, i32** %6, align 8, !dbg !126
  %70 = load i32, i32* %7, align 4, !dbg !127
  %71 = load i32, i32* %8, align 4, !dbg !128
  %72 = add nsw i32 %71, 1, !dbg !129
  %73 = load i32, i32* %9, align 4, !dbg !130
  call void @selection(i32* %69, i32 %70, i32 %72, i32 %73, i32 0), !dbg !131
  br label %74, !dbg !132

; <label>:74:                                     ; preds = %68, %28
  %75 = load i32*, i32** %6, align 8, !dbg !133
  %76 = load i32, i32* %7, align 4, !dbg !134
  %77 = add nsw i32 %76, 1, !dbg !135
  %78 = load i32, i32* %9, align 4, !dbg !136
  call void @selection(i32* %75, i32 %77, i32 0, i32 %78, i32 1), !dbg !137
  br label %79, !dbg !138

; <label>:79:                                     ; preds = %74, %5
  ret void, !dbg !139
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example4.c", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!7 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 8, type: !8, isLocal: false, isDefinition: true, scopeLine: 8, isOptimized: false, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{!10}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DILocation(line: 8, column: 12, scope: !7)
!12 = !DILocalVariable(name: "list", scope: !7, file: !1, line: 9, type: !13)
!13 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 960, elements: !14)
!14 = !{!15}
!15 = !DISubrange(count: 30)
!16 = !DILocation(line: 9, column: 7, scope: !7)
!17 = !DILocalVariable(name: "size", scope: !7, file: !1, line: 9, type: !10)
!18 = !DILocation(line: 9, column: 17, scope: !7)
!19 = !DILocalVariable(name: "temp", scope: !7, file: !1, line: 9, type: !10)
!20 = !DILocation(line: 9, column: 23, scope: !7)
!21 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 9, type: !10)
!22 = !DILocation(line: 9, column: 29, scope: !7)
!23 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 9, type: !10)
!24 = !DILocation(line: 9, column: 32, scope: !7)
!25 = !DILocation(line: 11, column: 3, scope: !7)
!26 = !DILocation(line: 12, column: 3, scope: !7)
!27 = !DILocation(line: 13, column: 3, scope: !7)
!28 = !DILocation(line: 14, column: 10, scope: !29)
!29 = distinct !DILexicalBlock(scope: !7, file: !1, line: 14, column: 3)
!30 = !DILocation(line: 14, column: 8, scope: !29)
!31 = !DILocation(line: 14, column: 15, scope: !32)
!32 = distinct !DILexicalBlock(scope: !29, file: !1, line: 14, column: 3)
!33 = !DILocation(line: 14, column: 19, scope: !32)
!34 = !DILocation(line: 14, column: 17, scope: !32)
!35 = !DILocation(line: 14, column: 3, scope: !29)
!36 = !DILocation(line: 15, column: 23, scope: !37)
!37 = distinct !DILexicalBlock(scope: !32, file: !1, line: 14, column: 30)
!38 = !DILocation(line: 15, column: 18, scope: !37)
!39 = !DILocation(line: 15, column: 5, scope: !37)
!40 = !DILocation(line: 16, column: 3, scope: !37)
!41 = !DILocation(line: 14, column: 26, scope: !32)
!42 = !DILocation(line: 14, column: 3, scope: !32)
!43 = distinct !{!43, !35, !44}
!44 = !DILocation(line: 16, column: 3, scope: !29)
!45 = !DILocation(line: 17, column: 13, scope: !7)
!46 = !DILocation(line: 17, column: 25, scope: !7)
!47 = !DILocation(line: 17, column: 3, scope: !7)
!48 = !DILocation(line: 18, column: 3, scope: !7)
!49 = !DILocation(line: 19, column: 10, scope: !50)
!50 = distinct !DILexicalBlock(scope: !7, file: !1, line: 19, column: 3)
!51 = !DILocation(line: 19, column: 8, scope: !50)
!52 = !DILocation(line: 19, column: 15, scope: !53)
!53 = distinct !DILexicalBlock(scope: !50, file: !1, line: 19, column: 3)
!54 = !DILocation(line: 19, column: 19, scope: !53)
!55 = !DILocation(line: 19, column: 17, scope: !53)
!56 = !DILocation(line: 19, column: 3, scope: !50)
!57 = !DILocation(line: 20, column: 25, scope: !58)
!58 = distinct !DILexicalBlock(scope: !53, file: !1, line: 19, column: 30)
!59 = !DILocation(line: 20, column: 20, scope: !58)
!60 = !DILocation(line: 20, column: 5, scope: !58)
!61 = !DILocation(line: 21, column: 3, scope: !58)
!62 = !DILocation(line: 19, column: 26, scope: !53)
!63 = !DILocation(line: 19, column: 3, scope: !53)
!64 = distinct !{!64, !56, !65}
!65 = !DILocation(line: 21, column: 3, scope: !50)
!66 = !DILocation(line: 23, column: 3, scope: !7)
!67 = distinct !DISubprogram(name: "selection", scope: !1, file: !1, line: 26, type: !68, isLocal: false, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !0, retainedNodes: !2)
!68 = !DISubroutineType(types: !69)
!69 = !{null, !70, !10, !10, !10, !10}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!71 = !DILocalVariable(name: "list", arg: 1, scope: !67, file: !1, line: 26, type: !70)
!72 = !DILocation(line: 26, column: 20, scope: !67)
!73 = !DILocalVariable(name: "i", arg: 2, scope: !67, file: !1, line: 26, type: !10)
!74 = !DILocation(line: 26, column: 32, scope: !67)
!75 = !DILocalVariable(name: "j", arg: 3, scope: !67, file: !1, line: 26, type: !10)
!76 = !DILocation(line: 26, column: 39, scope: !67)
!77 = !DILocalVariable(name: "size", arg: 4, scope: !67, file: !1, line: 26, type: !10)
!78 = !DILocation(line: 26, column: 46, scope: !67)
!79 = !DILocalVariable(name: "flag", arg: 5, scope: !67, file: !1, line: 26, type: !10)
!80 = !DILocation(line: 26, column: 56, scope: !67)
!81 = !DILocation(line: 26, column: 62, scope: !67)
!82 = !DILocalVariable(name: "temp", scope: !67, file: !1, line: 27, type: !10)
!83 = !DILocation(line: 27, column: 7, scope: !67)
!84 = !DILocation(line: 29, column: 7, scope: !85)
!85 = distinct !DILexicalBlock(scope: !67, file: !1, line: 29, column: 7)
!86 = !DILocation(line: 29, column: 11, scope: !85)
!87 = !DILocation(line: 29, column: 16, scope: !85)
!88 = !DILocation(line: 29, column: 9, scope: !85)
!89 = !DILocation(line: 29, column: 7, scope: !67)
!90 = !DILocation(line: 30, column: 9, scope: !91)
!91 = distinct !DILexicalBlock(scope: !92, file: !1, line: 30, column: 9)
!92 = distinct !DILexicalBlock(scope: !85, file: !1, line: 29, column: 21)
!93 = !DILocation(line: 30, column: 9, scope: !92)
!94 = !DILocation(line: 31, column: 11, scope: !95)
!95 = distinct !DILexicalBlock(scope: !91, file: !1, line: 30, column: 15)
!96 = !DILocation(line: 31, column: 13, scope: !95)
!97 = !DILocation(line: 31, column: 9, scope: !95)
!98 = !DILocation(line: 32, column: 5, scope: !95)
!99 = !DILocation(line: 33, column: 9, scope: !100)
!100 = distinct !DILexicalBlock(scope: !92, file: !1, line: 33, column: 9)
!101 = !DILocation(line: 33, column: 13, scope: !100)
!102 = !DILocation(line: 33, column: 11, scope: !100)
!103 = !DILocation(line: 33, column: 9, scope: !92)
!104 = !DILocation(line: 34, column: 11, scope: !105)
!105 = distinct !DILexicalBlock(scope: !106, file: !1, line: 34, column: 11)
!106 = distinct !DILexicalBlock(scope: !100, file: !1, line: 33, column: 19)
!107 = !DILocation(line: 34, column: 16, scope: !105)
!108 = !DILocation(line: 34, column: 21, scope: !105)
!109 = !DILocation(line: 34, column: 26, scope: !105)
!110 = !DILocation(line: 34, column: 19, scope: !105)
!111 = !DILocation(line: 34, column: 11, scope: !106)
!112 = !DILocation(line: 35, column: 16, scope: !113)
!113 = distinct !DILexicalBlock(scope: !105, file: !1, line: 34, column: 30)
!114 = !DILocation(line: 35, column: 21, scope: !113)
!115 = !DILocation(line: 35, column: 14, scope: !113)
!116 = !DILocation(line: 36, column: 19, scope: !113)
!117 = !DILocation(line: 36, column: 24, scope: !113)
!118 = !DILocation(line: 36, column: 9, scope: !113)
!119 = !DILocation(line: 36, column: 14, scope: !113)
!120 = !DILocation(line: 36, column: 17, scope: !113)
!121 = !DILocation(line: 37, column: 19, scope: !113)
!122 = !DILocation(line: 37, column: 9, scope: !113)
!123 = !DILocation(line: 37, column: 14, scope: !113)
!124 = !DILocation(line: 37, column: 17, scope: !113)
!125 = !DILocation(line: 38, column: 7, scope: !113)
!126 = !DILocation(line: 39, column: 17, scope: !106)
!127 = !DILocation(line: 39, column: 23, scope: !106)
!128 = !DILocation(line: 39, column: 26, scope: !106)
!129 = !DILocation(line: 39, column: 28, scope: !106)
!130 = !DILocation(line: 39, column: 33, scope: !106)
!131 = !DILocation(line: 39, column: 7, scope: !106)
!132 = !DILocation(line: 40, column: 5, scope: !106)
!133 = !DILocation(line: 41, column: 15, scope: !92)
!134 = !DILocation(line: 41, column: 21, scope: !92)
!135 = !DILocation(line: 41, column: 23, scope: !92)
!136 = !DILocation(line: 41, column: 31, scope: !92)
!137 = !DILocation(line: 41, column: 5, scope: !92)
!138 = !DILocation(line: 42, column: 3, scope: !92)
!139 = !DILocation(line: 43, column: 1, scope: !67)
