; ModuleID = '/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example3.c'
source_filename = "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example3.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$__llvm_profile_filename = comdat any

@.str = private unnamed_addr constant [43 x i8] c"Enter total number of elements(1 to 100): \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"Enter Number %d: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Largest element = %.2f\00", align 1
@__llvm_coverage_mapping = internal constant { { i32, i32, i32, i32 }, [1 x <{ i64, i32, i64 }>], [160 x i8] } { { i32, i32, i32, i32 } { i32 1, i32 78, i32 82, i32 2 }, [1 x <{ i64, i32, i64 }>] [<{ i64, i32, i64 }> <{ i64 -2624081020897602054, i32 80, i64 -6692825225941841064 }>], [160 x i8] c"\01L/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example3.c\01\00\02\01\05\01\09\0C\01\03\0C\17\02\03\09\0F\00\14\05\00\16\00\19\05\00\1A\00\9B\80\80\80\08\05\00\1B\03\04\07\06\0F\00\14\09\00\16\00\19\09\00\1A\00\9B\80\80\80\08\09\00\1B\04\04\09\02\09\00\18\0D\00\19\01\87\80\80\80\08\0D\01\07\00\16\00\00" }, section "__llvm_covmap", align 8
@__profc_main = private global [4 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_main = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -2624081020897602054, i64 -6692825225941841064, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i32 0, i32 0), i8* bitcast (i32 ()* @main to i8*), i8* null, i32 4, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__llvm_prf_nm = private constant [14 x i8] c"\04\0Cx\DA\CBM\CC\CC\03\00\04\1B\01\A6", section "__llvm_prf_names"
@llvm.used = appending global [3 x i8*] [i8* bitcast ({ { i32, i32, i32, i32 }, [1 x <{ i64, i32, i64 }>], [160 x i8] }* @__llvm_coverage_mapping to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_main to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__llvm_prf_nm, i32 0, i32 0)], section "llvm.metadata"
@__llvm_profile_filename = constant [30 x i8] c"example3-ropfuscated.profdata\00", comdat

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !7 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [100 x float], align 16
  store i32 0, i32* %1, align 4
  %5 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 0), !dbg !11
  %6 = add i64 %5, 1, !dbg !11
  store i64 %6, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 0), !dbg !11
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12, metadata !DIExpression()), !dbg !13
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14, metadata !DIExpression()), !dbg !15
  call void @llvm.dbg.declare(metadata [100 x float]* %4, metadata !16, metadata !DIExpression()), !dbg !21
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i32 0, i32 0)), !dbg !22
  %8 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32* %3), !dbg !23
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)), !dbg !24
  store i32 0, i32* %2, align 4, !dbg !25
  br label %10, !dbg !27

; <label>:10:                                     ; preds = %24, %0
  %11 = load i32, i32* %2, align 4, !dbg !28
  %12 = load i32, i32* %3, align 4, !dbg !30
  %13 = icmp slt i32 %11, %12, !dbg !31
  br i1 %13, label %14, label %27, !dbg !32

; <label>:14:                                     ; preds = %10
  %15 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 1), !dbg !32
  %16 = add i64 %15, 1, !dbg !32
  store i64 %16, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 1), !dbg !32
  %17 = load i32, i32* %2, align 4, !dbg !33
  %18 = add nsw i32 %17, 1, !dbg !35
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i32 %18), !dbg !36
  %20 = load i32, i32* %2, align 4, !dbg !37
  %21 = sext i32 %20 to i64, !dbg !38
  %22 = getelementptr inbounds [100 x float], [100 x float]* %4, i64 0, i64 %21, !dbg !38
  %23 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0), float* %22), !dbg !39
  br label %24, !dbg !40

; <label>:24:                                     ; preds = %14
  %25 = load i32, i32* %2, align 4, !dbg !41
  %26 = add nsw i32 %25, 1, !dbg !41
  store i32 %26, i32* %2, align 4, !dbg !41
  br label %10, !dbg !42, !llvm.loop !43

; <label>:27:                                     ; preds = %10
  store i32 1, i32* %2, align 4, !dbg !45
  br label %28, !dbg !47

; <label>:28:                                     ; preds = %51, %27
  %29 = load i32, i32* %2, align 4, !dbg !48
  %30 = load i32, i32* %3, align 4, !dbg !50
  %31 = icmp slt i32 %29, %30, !dbg !51
  br i1 %31, label %32, label %54, !dbg !52

; <label>:32:                                     ; preds = %28
  %33 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 2), !dbg !52
  %34 = add i64 %33, 1, !dbg !52
  store i64 %34, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 2), !dbg !52
  %35 = getelementptr inbounds [100 x float], [100 x float]* %4, i64 0, i64 0, !dbg !53
  %36 = load float, float* %35, align 16, !dbg !53
  %37 = load i32, i32* %2, align 4, !dbg !56
  %38 = sext i32 %37 to i64, !dbg !57
  %39 = getelementptr inbounds [100 x float], [100 x float]* %4, i64 0, i64 %38, !dbg !57
  %40 = load float, float* %39, align 4, !dbg !57
  %41 = fcmp olt float %36, %40, !dbg !58
  br i1 %41, label %42, label %50, !dbg !59

; <label>:42:                                     ; preds = %32
  %43 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 3), !dbg !59
  %44 = add i64 %43, 1, !dbg !59
  store i64 %44, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @__profc_main, i64 0, i64 3), !dbg !59
  %45 = load i32, i32* %2, align 4, !dbg !60
  %46 = sext i32 %45 to i64, !dbg !61
  %47 = getelementptr inbounds [100 x float], [100 x float]* %4, i64 0, i64 %46, !dbg !61
  %48 = load float, float* %47, align 4, !dbg !61
  %49 = getelementptr inbounds [100 x float], [100 x float]* %4, i64 0, i64 0, !dbg !62
  store float %48, float* %49, align 16, !dbg !63
  br label %50, !dbg !62

; <label>:50:                                     ; preds = %42, %32
  br label %51, !dbg !64

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* %2, align 4, !dbg !65
  %53 = add nsw i32 %52, 1, !dbg !65
  store i32 %53, i32* %2, align 4, !dbg !65
  br label %28, !dbg !66, !llvm.loop !67

; <label>:54:                                     ; preds = %28
  %55 = getelementptr inbounds [100 x float], [100 x float]* %4, i64 0, i64 0, !dbg !69
  %56 = load float, float* %55, align 16, !dbg !69
  %57 = fpext float %56 to double, !dbg !69
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0), double %57), !dbg !70
  ret i32 0, !dbg !71
}

; Function Attrs: nounwind
declare void @llvm.instrprof.increment(i8*, i64, i32, i32) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @__isoc99_scanf(i8*, ...) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example3.c", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!7 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 3, type: !8, isLocal: false, isDefinition: true, scopeLine: 3, isOptimized: false, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{!10}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DILocation(line: 3, column: 12, scope: !7)
!12 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 4, type: !10)
!13 = !DILocation(line: 4, column: 7, scope: !7)
!14 = !DILocalVariable(name: "n", scope: !7, file: !1, line: 4, type: !10)
!15 = !DILocation(line: 4, column: 10, scope: !7)
!16 = !DILocalVariable(name: "arr", scope: !7, file: !1, line: 5, type: !17)
!17 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 3200, elements: !19)
!18 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!19 = !{!20}
!20 = !DISubrange(count: 100)
!21 = !DILocation(line: 5, column: 9, scope: !7)
!22 = !DILocation(line: 7, column: 3, scope: !7)
!23 = !DILocation(line: 8, column: 3, scope: !7)
!24 = !DILocation(line: 9, column: 3, scope: !7)
!25 = !DILocation(line: 12, column: 10, scope: !26)
!26 = distinct !DILexicalBlock(scope: !7, file: !1, line: 12, column: 3)
!27 = !DILocation(line: 12, column: 8, scope: !26)
!28 = !DILocation(line: 12, column: 15, scope: !29)
!29 = distinct !DILexicalBlock(scope: !26, file: !1, line: 12, column: 3)
!30 = !DILocation(line: 12, column: 19, scope: !29)
!31 = !DILocation(line: 12, column: 17, scope: !29)
!32 = !DILocation(line: 12, column: 3, scope: !26)
!33 = !DILocation(line: 13, column: 33, scope: !34)
!34 = distinct !DILexicalBlock(scope: !29, file: !1, line: 12, column: 27)
!35 = !DILocation(line: 13, column: 35, scope: !34)
!36 = !DILocation(line: 13, column: 5, scope: !34)
!37 = !DILocation(line: 14, column: 22, scope: !34)
!38 = !DILocation(line: 14, column: 18, scope: !34)
!39 = !DILocation(line: 14, column: 5, scope: !34)
!40 = !DILocation(line: 15, column: 3, scope: !34)
!41 = !DILocation(line: 12, column: 22, scope: !29)
!42 = !DILocation(line: 12, column: 3, scope: !29)
!43 = distinct !{!43, !32, !44}
!44 = !DILocation(line: 15, column: 3, scope: !26)
!45 = !DILocation(line: 18, column: 10, scope: !46)
!46 = distinct !DILexicalBlock(scope: !7, file: !1, line: 18, column: 3)
!47 = !DILocation(line: 18, column: 8, scope: !46)
!48 = !DILocation(line: 18, column: 15, scope: !49)
!49 = distinct !DILexicalBlock(scope: !46, file: !1, line: 18, column: 3)
!50 = !DILocation(line: 18, column: 19, scope: !49)
!51 = !DILocation(line: 18, column: 17, scope: !49)
!52 = !DILocation(line: 18, column: 3, scope: !46)
!53 = !DILocation(line: 20, column: 9, scope: !54)
!54 = distinct !DILexicalBlock(scope: !55, file: !1, line: 20, column: 9)
!55 = distinct !DILexicalBlock(scope: !49, file: !1, line: 18, column: 27)
!56 = !DILocation(line: 20, column: 22, scope: !54)
!57 = !DILocation(line: 20, column: 18, scope: !54)
!58 = !DILocation(line: 20, column: 16, scope: !54)
!59 = !DILocation(line: 20, column: 9, scope: !55)
!60 = !DILocation(line: 21, column: 20, scope: !54)
!61 = !DILocation(line: 21, column: 16, scope: !54)
!62 = !DILocation(line: 21, column: 7, scope: !54)
!63 = !DILocation(line: 21, column: 14, scope: !54)
!64 = !DILocation(line: 22, column: 3, scope: !55)
!65 = !DILocation(line: 18, column: 22, scope: !49)
!66 = !DILocation(line: 18, column: 3, scope: !49)
!67 = distinct !{!67, !52, !68}
!68 = !DILocation(line: 22, column: 3, scope: !46)
!69 = !DILocation(line: 23, column: 36, scope: !7)
!70 = !DILocation(line: 23, column: 3, scope: !7)
!71 = !DILocation(line: 25, column: 3, scope: !7)
