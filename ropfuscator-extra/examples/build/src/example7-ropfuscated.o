; ModuleID = '/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example7.c'
source_filename = "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example7.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

$__llvm_profile_filename = comdat any

@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"The FILE has been opened...\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Number of characters to be copied %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"\0A**File copied successfully in reverse order**\0A\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"Error occured\0A\00", align 1
@__llvm_coverage_mapping = internal constant { { i32, i32, i32, i32 }, [2 x <{ i64, i32, i64 }>], [160 x i8] } { { i32, i32, i32, i32 } { i32 2, i32 78, i32 82, i32 2 }, [2 x <{ i64, i32, i64 }>] [<{ i64, i32, i64 }> <{ i64 -2624081020897602054, i32 67, i64 11040003281 }>, <{ i64, i32, i64 }> <{ i64 6434320998058244281, i32 9, i64 24 }>], [160 x i8] c"\01L/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example7.c\01\00\03\05\09\01\05\01\05\09\01\09#\1C\02\01\06\07\00 \05\00!\00\A2\80\80\80\08\05\00\22\11\04\03\0A\0C\00\0F\09\00\10\00\91\80\80\80\08\09\00\11\05\06\0A\07\04\00\8A\80\80\80\08\0A\00\0A\02\04\01\00\00\01\01( \06\02\00\00\00\00\00\00" }, section "__llvm_covmap", align 8
@__profc_main = private global [3 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_main = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 -2624081020897602054, i64 11040003281, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i32 0, i32 0), i8* bitcast (void (i32, i8**)* @main to i8*), i8* null, i32 3, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_count_characters = private global [1 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_count_characters = private global { i64, i64, i64*, i8*, i8*, i32, [2 x i16] } { i64 6434320998058244281, i64 24, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_count_characters, i32 0, i32 0), i8* bitcast (i64 (%struct._IO_FILE*)* @count_characters to i8*), i8* null, i32 1, [2 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__llvm_prf_nm = private constant [31 x i8] c"\15\1Dx\DA\CBM\CC\CCcL\CE/\CD+\89O\CEH,JL.I-*\06\00X\9B\08O", section "__llvm_prf_names"
@llvm.used = appending global [4 x i8*] [i8* bitcast ({ { i32, i32, i32, i32 }, [2 x <{ i64, i32, i64 }>], [160 x i8] }* @__llvm_coverage_mapping to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_main to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [2 x i16] }* @__profd_count_characters to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__llvm_prf_nm, i32 0, i32 0)], section "llvm.metadata"
@__llvm_profile_filename = constant [30 x i8] c"example7-ropfuscated.profdata\00", comdat

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32, i8**) #0 !dbg !7 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca %struct._IO_FILE*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14, metadata !DIExpression()), !dbg !15
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !16, metadata !DIExpression()), !dbg !17
  %11 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 0), !dbg !18
  %12 = add i64 %11, 1, !dbg !18
  store i64 %12, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 0), !dbg !18
  call void @llvm.dbg.declare(metadata i32* %5, metadata !19, metadata !DIExpression()), !dbg !20
  call void @llvm.dbg.declare(metadata i64* %6, metadata !21, metadata !DIExpression()), !dbg !23
  call void @llvm.dbg.declare(metadata i8* %7, metadata !24, metadata !DIExpression()), !dbg !25
  call void @llvm.dbg.declare(metadata i8* %8, metadata !26, metadata !DIExpression()), !dbg !27
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %9, metadata !28, metadata !DIExpression()), !dbg !88
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !89, metadata !DIExpression()), !dbg !90
  %13 = load i8**, i8*** %4, align 8, !dbg !91
  %14 = getelementptr inbounds i8*, i8** %13, i64 1, !dbg !91
  %15 = load i8*, i8** %14, align 8, !dbg !91
  %16 = call %struct._IO_FILE* @fopen(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !93
  store %struct._IO_FILE* %16, %struct._IO_FILE** %9, align 8, !dbg !94
  %17 = icmp ne %struct._IO_FILE* %16, null, !dbg !94
  br i1 %17, label %18, label %52, !dbg !95

; <label>:18:                                     ; preds = %2
  %19 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 1), !dbg !95
  %20 = add i64 %19, 1, !dbg !95
  store i64 %20, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 1), !dbg !95
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0)), !dbg !96
  %22 = load i8**, i8*** %4, align 8, !dbg !98
  %23 = getelementptr inbounds i8*, i8** %22, i64 2, !dbg !98
  %24 = load i8*, i8** %23, align 8, !dbg !98
  %25 = call %struct._IO_FILE* @fopen(i8* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)), !dbg !99
  store %struct._IO_FILE* %25, %struct._IO_FILE** %10, align 8, !dbg !100
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !dbg !101
  %27 = call i64 @count_characters(%struct._IO_FILE* %26), !dbg !102
  store i64 %27, i64* %6, align 8, !dbg !103
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !dbg !104
  %29 = call i32 @fseek(%struct._IO_FILE* %28, i64 -1, i32 2), !dbg !105
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !dbg !106
  %31 = call i64 @ftell(%struct._IO_FILE* %30), !dbg !107
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i64 %31), !dbg !108
  br label %33, !dbg !109

; <label>:33:                                     ; preds = %36, %18
  %34 = load i64, i64* %6, align 8, !dbg !110
  %35 = icmp ne i64 %34, 0, !dbg !109
  br i1 %35, label %36, label %50, !dbg !109

; <label>:36:                                     ; preds = %33
  %37 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 2), !dbg !109
  %38 = add i64 %37, 1, !dbg !109
  store i64 %38, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @__profc_main, i64 0, i64 2), !dbg !109
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !dbg !111
  %40 = call i32 @fgetc(%struct._IO_FILE* %39), !dbg !113
  %41 = trunc i32 %40 to i8, !dbg !113
  store i8 %41, i8* %7, align 1, !dbg !114
  %42 = load i8, i8* %7, align 1, !dbg !115
  %43 = sext i8 %42 to i32, !dbg !115
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !116
  %45 = call i32 @fputc(i32 %43, %struct._IO_FILE* %44), !dbg !117
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !dbg !118
  %47 = call i32 @fseek(%struct._IO_FILE* %46, i64 -2, i32 1), !dbg !119
  %48 = load i64, i64* %6, align 8, !dbg !120
  %49 = add nsw i64 %48, -1, !dbg !120
  store i64 %49, i64* %6, align 8, !dbg !120
  br label %33, !dbg !109, !llvm.loop !121

; <label>:50:                                     ; preds = %33
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i32 0, i32 0)), !dbg !123
  br label %53, !dbg !124

; <label>:52:                                     ; preds = %2
  call void @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0)), !dbg !125
  br label %53

; <label>:53:                                     ; preds = %52, %50
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !dbg !127
  %55 = call i32 @fclose(%struct._IO_FILE* %54), !dbg !128
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !129
  %57 = call i32 @fclose(%struct._IO_FILE* %56), !dbg !130
  ret void, !dbg !131
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.instrprof.increment(i8*, i64, i32, i32) #2

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @count_characters(%struct._IO_FILE*) #0 !dbg !132 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !135, metadata !DIExpression()), !dbg !136
  %4 = load i64, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_count_characters, i64 0, i64 0), !dbg !137
  %5 = add i64 %4, 1, !dbg !137
  store i64 %5, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_count_characters, i64 0, i64 0), !dbg !137
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !138
  %7 = call i32 @fseek(%struct._IO_FILE* %6, i64 -1, i32 2), !dbg !139
  call void @llvm.dbg.declare(metadata i64* %3, metadata !140, metadata !DIExpression()), !dbg !141
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !142
  %9 = call i64 @ftell(%struct._IO_FILE* %8), !dbg !143
  store i64 %9, i64* %3, align 8, !dbg !141
  %10 = load i64, i64* %3, align 8, !dbg !144
  %11 = add nsw i64 %10, 1, !dbg !144
  store i64 %11, i64* %3, align 8, !dbg !144
  %12 = load i64, i64* %3, align 8, !dbg !145
  ret i64 %12, !dbg !146
}

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #3

declare dso_local i64 @ftell(%struct._IO_FILE*) #3

declare dso_local i32 @fgetc(%struct._IO_FILE*) #3

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #3

declare dso_local void @perror(i8*) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1 (tags/RELEASE_701/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/src/example7.c", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!7 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 9, type: !8, isLocal: false, isDefinition: true, scopeLine: 9, flags: DIFlagPrototyped, isOptimized: false, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !11}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!14 = !DILocalVariable(name: "argc", arg: 1, scope: !7, file: !1, line: 9, type: !10)
!15 = !DILocation(line: 9, column: 15, scope: !7)
!16 = !DILocalVariable(name: "argv", arg: 2, scope: !7, file: !1, line: 9, type: !11)
!17 = !DILocation(line: 9, column: 27, scope: !7)
!18 = !DILocation(line: 9, column: 35, scope: !7)
!19 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 10, type: !10)
!20 = !DILocation(line: 10, column: 7, scope: !7)
!21 = !DILocalVariable(name: "cnt", scope: !7, file: !1, line: 11, type: !22)
!22 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!23 = !DILocation(line: 11, column: 8, scope: !7)
!24 = !DILocalVariable(name: "ch", scope: !7, file: !1, line: 12, type: !13)
!25 = !DILocation(line: 12, column: 8, scope: !7)
!26 = !DILocalVariable(name: "ch1", scope: !7, file: !1, line: 12, type: !13)
!27 = !DILocation(line: 12, column: 12, scope: !7)
!28 = !DILocalVariable(name: "fp1", scope: !7, file: !1, line: 13, type: !29)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !31, line: 7, baseType: !32)
!31 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !33, line: 49, size: 1728, elements: !34)
!33 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!34 = !{!35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !50, !52, !53, !54, !57, !59, !61, !65, !68, !70, !73, !76, !77, !79, !83, !84}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !32, file: !33, line: 51, baseType: !10, size: 32)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !32, file: !33, line: 54, baseType: !12, size: 64, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !32, file: !33, line: 55, baseType: !12, size: 64, offset: 128)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !32, file: !33, line: 56, baseType: !12, size: 64, offset: 192)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !32, file: !33, line: 57, baseType: !12, size: 64, offset: 256)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !32, file: !33, line: 58, baseType: !12, size: 64, offset: 320)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !32, file: !33, line: 59, baseType: !12, size: 64, offset: 384)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !32, file: !33, line: 60, baseType: !12, size: 64, offset: 448)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !32, file: !33, line: 61, baseType: !12, size: 64, offset: 512)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !32, file: !33, line: 64, baseType: !12, size: 64, offset: 576)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !32, file: !33, line: 65, baseType: !12, size: 64, offset: 640)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !32, file: !33, line: 66, baseType: !12, size: 64, offset: 704)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !32, file: !33, line: 68, baseType: !48, size: 64, offset: 768)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!49 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !33, line: 36, flags: DIFlagFwdDecl)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !32, file: !33, line: 70, baseType: !51, size: 64, offset: 832)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !32, file: !33, line: 72, baseType: !10, size: 32, offset: 896)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !32, file: !33, line: 73, baseType: !10, size: 32, offset: 928)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !32, file: !33, line: 74, baseType: !55, size: 64, offset: 960)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !56, line: 150, baseType: !22)
!56 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !32, file: !33, line: 77, baseType: !58, size: 16, offset: 1024)
!58 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !32, file: !33, line: 78, baseType: !60, size: 8, offset: 1040)
!60 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !32, file: !33, line: 79, baseType: !62, size: 8, offset: 1048)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 8, elements: !63)
!63 = !{!64}
!64 = !DISubrange(count: 1)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !32, file: !33, line: 81, baseType: !66, size: 64, offset: 1088)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !33, line: 43, baseType: null)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !32, file: !33, line: 89, baseType: !69, size: 64, offset: 1152)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !56, line: 151, baseType: !22)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !32, file: !33, line: 91, baseType: !71, size: 64, offset: 1216)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !33, line: 37, flags: DIFlagFwdDecl)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !32, file: !33, line: 92, baseType: !74, size: 64, offset: 1280)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64)
!75 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !33, line: 38, flags: DIFlagFwdDecl)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !32, file: !33, line: 93, baseType: !51, size: 64, offset: 1344)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !32, file: !33, line: 94, baseType: !78, size: 64, offset: 1408)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !32, file: !33, line: 95, baseType: !80, size: 64, offset: 1472)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !81, line: 62, baseType: !82)
!81 = !DIFile(filename: "/usr/lib64/llvm/7/bin/../../../../lib/clang/7.0.1/include/stddef.h", directory: "/tmp/llvm-7.0.0.src/lib/Target/X86/ropfuscator-extra/examples/build/src")
!82 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !32, file: !33, line: 96, baseType: !10, size: 32, offset: 1536)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !32, file: !33, line: 98, baseType: !85, size: 160, offset: 1568)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 160, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 20)
!88 = !DILocation(line: 13, column: 9, scope: !7)
!89 = !DILocalVariable(name: "fp2", scope: !7, file: !1, line: 13, type: !29)
!90 = !DILocation(line: 13, column: 15, scope: !7)
!91 = !DILocation(line: 15, column: 19, scope: !92)
!92 = distinct !DILexicalBlock(scope: !7, file: !1, line: 15, column: 7)
!93 = !DILocation(line: 15, column: 13, scope: !92)
!94 = !DILocation(line: 15, column: 11, scope: !92)
!95 = !DILocation(line: 15, column: 7, scope: !7)
!96 = !DILocation(line: 16, column: 5, scope: !97)
!97 = distinct !DILexicalBlock(scope: !92, file: !1, line: 15, column: 34)
!98 = !DILocation(line: 17, column: 17, scope: !97)
!99 = !DILocation(line: 17, column: 11, scope: !97)
!100 = !DILocation(line: 17, column: 9, scope: !97)
!101 = !DILocation(line: 19, column: 9, scope: !97)
!102 = !DILocation(line: 18, column: 11, scope: !97)
!103 = !DILocation(line: 18, column: 9, scope: !97)
!104 = !DILocation(line: 21, column: 9, scope: !97)
!105 = !DILocation(line: 20, column: 5, scope: !97)
!106 = !DILocation(line: 23, column: 60, scope: !97)
!107 = !DILocation(line: 23, column: 54, scope: !97)
!108 = !DILocation(line: 23, column: 5, scope: !97)
!109 = !DILocation(line: 25, column: 5, scope: !97)
!110 = !DILocation(line: 25, column: 12, scope: !97)
!111 = !DILocation(line: 26, column: 18, scope: !112)
!112 = distinct !DILexicalBlock(scope: !97, file: !1, line: 25, column: 17)
!113 = !DILocation(line: 26, column: 12, scope: !112)
!114 = !DILocation(line: 26, column: 10, scope: !112)
!115 = !DILocation(line: 27, column: 13, scope: !112)
!116 = !DILocation(line: 27, column: 17, scope: !112)
!117 = !DILocation(line: 27, column: 7, scope: !112)
!118 = !DILocation(line: 28, column: 13, scope: !112)
!119 = !DILocation(line: 28, column: 7, scope: !112)
!120 = !DILocation(line: 29, column: 10, scope: !112)
!121 = distinct !{!121, !109, !122}
!122 = !DILocation(line: 30, column: 5, scope: !97)
!123 = !DILocation(line: 31, column: 5, scope: !97)
!124 = !DILocation(line: 32, column: 3, scope: !97)
!125 = !DILocation(line: 33, column: 5, scope: !126)
!126 = distinct !DILexicalBlock(scope: !92, file: !1, line: 32, column: 10)
!127 = !DILocation(line: 35, column: 10, scope: !7)
!128 = !DILocation(line: 35, column: 3, scope: !7)
!129 = !DILocation(line: 36, column: 10, scope: !7)
!130 = !DILocation(line: 36, column: 3, scope: !7)
!131 = !DILocation(line: 37, column: 1, scope: !7)
!132 = distinct !DISubprogram(name: "count_characters", scope: !1, file: !1, line: 40, type: !133, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !0, retainedNodes: !2)
!133 = !DISubroutineType(types: !134)
!134 = !{!22, !29}
!135 = !DILocalVariable(name: "f", arg: 1, scope: !132, file: !1, line: 40, type: !29)
!136 = !DILocation(line: 40, column: 29, scope: !132)
!137 = !DILocation(line: 40, column: 32, scope: !132)
!138 = !DILocation(line: 41, column: 9, scope: !132)
!139 = !DILocation(line: 41, column: 3, scope: !132)
!140 = !DILocalVariable(name: "last_pos", scope: !132, file: !1, line: 42, type: !22)
!141 = !DILocation(line: 42, column: 8, scope: !132)
!142 = !DILocation(line: 43, column: 13, scope: !132)
!143 = !DILocation(line: 43, column: 7, scope: !132)
!144 = !DILocation(line: 44, column: 11, scope: !132)
!145 = !DILocation(line: 45, column: 10, scope: !132)
!146 = !DILocation(line: 45, column: 3, scope: !132)
